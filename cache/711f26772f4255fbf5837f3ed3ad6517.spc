a:4:{s:5:"child";a:1:{s:27:"http://www.w3.org/2005/Atom";a:1:{s:4:"feed";a:1:{i:0;a:6:{s:4:"data";s:77:"
    
    
    
    
    
    
    









































";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:1:{s:27:"http://www.w3.org/2005/Atom";a:7:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:14:"Mark S. Kolich";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:2:{i:0;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:3:"rel";s:9:"alternate";s:4:"type";s:9:"text/html";s:4:"href";s:20:"http://mark.koli.ch/";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:1;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:3:"rel";s:4:"self";s:4:"type";s:20:"application/atom+xml";s:4:"href";s:28:"http://mark.koli.ch/atom.xml";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:2:"id";a:1:{i:0;a:5:{s:4:"data";s:18:"tag:,2008-10-25:/1";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"updated";a:1:{i:0;a:5:{s:4:"data";s:20:"2009-11-07T08:49:24Z";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"subtitle";a:1:{i:0;a:5:{s:4:"data";s:34:"Engineer, Entrepreneur, Consultant";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:9:"generator";a:1:{i:0;a:5:{s:4:"data";s:20:"Movable Type 4.21-en";s:7:"attribs";a:1:{s:0:"";a:1:{s:3:"uri";s:36:"http://www.sixapart.com/movabletype/";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:5:"entry";a:20:{i:0;a:6:{s:4:"data";s:63:"
    
    
    

    
    

    
    
    
    
    
    
    
";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:1:{s:27:"http://www.w3.org/2005/Atom";a:9:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:71:"Let Movable Type Generate Your XML Sitemap with a Custom Index Template";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:3:"rel";s:9:"alternate";s:4:"type";s:9:"text/html";s:4:"href";s:79:"http://mark.koli.ch/2009/11/let-movable-type-generate-your-xml-sitemap.html?rss";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:2:"id";a:1:{i:0;a:5:{s:4:"data";s:29:"tag:mark.koli.ch,2009://1.212";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:9:"published";a:1:{i:0;a:5:{s:4:"data";s:20:"2009-11-07T08:45:00Z";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"updated";a:1:{i:0;a:5:{s:4:"data";s:20:"2009-11-07T08:49:24Z";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"summary";a:1:{i:0;a:5:{s:4:"data";s:247:"Many sites are moving towards dynamic XML sitemaps.&nbsp; These sitemaps let you tell Google, Yahoo, Bing, and Ask.com which pages on your site they should index, how often, and when they were last modified.&nbsp; You can even assign a priority...";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:6:"author";a:1:{i:0;a:6:{s:4:"data";s:23:"
        
        
    ";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:1:{s:27:"http://www.w3.org/2005/Atom";a:2:{s:4:"name";a:1:{i:0;a:5:{s:4:"data";s:11:"Mark Kolich";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:3:"uri";a:1:{i:0;a:5:{s:4:"data";s:19:"http://mark.koli.ch";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}}s:8:"category";a:2:{i:0;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:2:"mt";s:5:"label";s:2:"mt";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:1;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:3:"xml";s:5:"label";s:3:"xml";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"content";a:1:{i:0;a:5:{s:4:"data";s:5724:"
        Many sites are moving towards dynamic XML sitemaps.&nbsp; These sitemaps let you tell Google, Yahoo, Bing, and Ask.com which pages on your site they should index, how often, and when they were last modified.&nbsp; You can even assign a priority to each page in the sitemap, which serves as an indication of how important a specific page is in relation to others.<br /><br />The sitemap protocol is <a href="http://www.sitemaps.org/protocol.php">well defined here at sitemaps.org</a>.<br /><br />Yesterday, I configured Movable Type, my blog publishing platform, to automatically generate <a href="http://mark.koli.ch/sitemap.xml">my own sitemap.xml</a> when I publish a new page or blog entry.&nbsp; I added a custom Movable Type Index Template that would automatically generate a complete <a href="http://mark.koli.ch/sitemap.xml">sitemap.xml</a> for me, and place it under the root of my blog at <a href="http://mark.koli.ch/sitemap.xml">http://mark.koli.ch/sitemap.xml</a>.<br /><br /><br /><span style="font-size: 1.1em; font-weight: bold;">1- My Sitemap XML Index Template</span><br /><br />My custom sitemap XML Index Template is relatively straightforward.&nbsp; In my Movable Type control panel, I clicked "Create index template" on the Blog Templates screen.&nbsp; I named my template "XML Sitemap" and used the following configuration:<br /><br /><pre class="prettyprint">&lt;?xml version="1.0" encoding="&lt;$mt:PublishCharset$&gt;"?&gt;<br />&lt;urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9"&gt;<br /><br />&lt;!-- blog root --&gt;<br /> &lt;url&gt;<br />  &lt;loc&gt;&lt;$mt:BlogURL encode_xml="1"$&gt;&lt;/loc&gt;<br />  &lt;lastmod&gt;<br />    &lt;mt:Entries lastn="1"&gt;<br />      &lt;$mt:EntryModifiedDate utc="1" format="%Y-%m-%dT%H:%M:%SZ"$&gt;<br />    &lt;/mt:Entries&gt;<br />  &lt;/lastmod&gt;<br />  &lt;changefreq&gt;weekly&lt;/changefreq&gt;<br />  &lt;priority&gt;1.0&lt;/priority&gt;<br /> &lt;/url&gt;<br /><br />&lt;!-- pages --&gt;<br />&lt;mt:Pages lastn="0"&gt;<br /> &lt;url&gt;<br />  &lt;loc&gt;&lt;$mt:PagePermalink$&gt;&lt;/loc&gt;<br />  &lt;lastmod&gt;&lt;mt:PageModifiedDate utc="1" format="%Y-%m-%dT%H:%M:%SZ"$&gt;&lt;/lastmod&gt;<br />  &lt;priority&gt;0.8&lt;/priority&gt;<br /> &lt;/url&gt;<br />&lt;/mt:Pages&gt;<br /><br />&lt;!-- entries --&gt;<br />&lt;mt:Entries lastn="0"&gt;<br /> &lt;url&gt;<br />  &lt;loc&gt;&lt;$mt:EntryPermalink encode_xml="1"$&gt;&lt;/loc&gt;<br />  &lt;lastmod&gt;&lt;$mt:EntryDate utc="1" format="%Y-%m-%dT%H:%M:%SZ"$&gt;&lt;/lastmod&gt;<br />  &lt;changefreq&gt;never&lt;/changefreq&gt;<br />  &lt;priority&gt;0.6&lt;/priority&gt;<br /> &lt;/url&gt;<br />&lt;/mt:Entries&gt;<br /><br />&lt;!-- archives --&gt;<br />&lt;mt:ArchiveList archive_type="Monthly"&gt;<br /> &lt;url&gt;<br />  &lt;loc&gt;&lt;mt:ArchiveLink&gt;&lt;/loc&gt;<br />  &lt;priority&gt;0.4&lt;/priority&gt;<br />  &lt;changefreq&gt;never&lt;/changefreq&gt;<br /> &lt;/url&gt;<br />&lt;/mt:ArchiveList&gt;<br /><br />&lt;/urlset&gt;<br /></pre><br />Using the <a href="http://www.sitemaps.org/protocol.php">sitemap XML protocol defined at sitemaps.org</a>, I configured this template to include my blog root, all pages, all entries, and all archives in the sitemap.&nbsp; I assigned a higher priority to my blog root and individual pages versus the entries and archives.&nbsp; Note that I also omitted the &lt;changefreq&gt; tag under each "page", because I have no idea how often those pages will actually change.&nbsp; Also, I intentionally omitted the &lt;lastmod&gt; tag under each archive page, since again, there's not point in defining the last modified date on an archive.<br /><br /><span class="mt-enclosure mt-enclosure-image" style="display: inline;"><a href="http://mark.koli.ch/2009/11/07/edit-template-xml-sitemap.png"><img alt="edit-template-xml-sitemap.png" src="http://mark.koli.ch/assets_c/2009/11/edit-template-xml-sitemap-thumb-450x552.png" class="mt-image-none" style="" height="552" width="450" /></a></span><br /><br />Of course, you're free to change this template as you see fit as long as it adheres to the sitemap standard.<br /><br /><br /><span style="font-size: 1.1em; font-weight: bold;">2- Submit Your Sitemap XML (Submission URL's)</span><br /><br />Once you publish your sitemap with Movable Type, you'll probably want to alert Google, Bing, Yahoo and Ask.com that you've got a new sitemap.xml available for your blog.&nbsp; As <a href="http://www.sitemaps.org/protocol.php#informing%5C">described here in the sitemap protocol</a>, you can "ping" these web crawlers to alert them of the change.&nbsp; To do so, copy and paste these URL's into a web-browser, and replace &lt;sitemap URL&gt; with the full URL to your new sitemap:<br /><br /><pre class="prettyprint">http://www.google.com/ping?sitemap=&lt;sitemap URL&gt;<br />http://search.yahooapis.com/SiteExplorerService/V1/ping?sitemap=&lt;sitemap URL&gt;<br />http://submissions.ask.com/ping?sitemap=&lt;sitemap URL&gt;<br />http://www.bing.com/webmaster/ping.aspx?siteMap=&lt;sitemap URL&gt;</pre><br />Example:<br /><br /><pre class="prettyprint">http://www.google.com/ping?sitemap=http://mark.koli.ch/sitemap.xml</pre><br />On each submission, you should see some type of successful (HTTP 200 OK) response indicating that your submission was successful.&nbsp; Here's what Google's looked like:<br /><br /><span class="mt-enclosure mt-enclosure-image" style="display: inline;"><a href="http://mark.koli.ch/2009/11/07/google-added-sitemap.png"><img alt="google-added-sitemap.png" src="http://mark.koli.ch/assets_c/2009/11/google-added-sitemap-thumb-450x121.png" class="mt-image-none" style="" height="121" width="450" /></a></span><br /><br />Enjoy!
        
    ";s:7:"attribs";a:2:{s:0:"";a:1:{s:4:"type";s:4:"html";}s:36:"http://www.w3.org/XML/1998/namespace";a:2:{s:4:"lang";s:5:"en-US";s:4:"base";s:20:"http://mark.koli.ch/";}}s:8:"xml_base";s:20:"http://mark.koli.ch/";s:17:"xml_base_explicit";b:1;s:8:"xml_lang";s:5:"en-US";}}}}}i:1;a:6:{s:4:"data";s:68:"
    
    
    

    
    

    
    
    
    
    
    
    
    
";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:1:{s:27:"http://www.w3.org/2005/Atom";a:9:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:11:"Onyx (beta)";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:3:"rel";s:9:"alternate";s:4:"type";s:9:"text/html";s:4:"href";s:46:"http://mark.koli.ch/2009/11/onyx-beta.html?rss";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:2:"id";a:1:{i:0;a:5:{s:4:"data";s:29:"tag:mark.koli.ch,2009://1.211";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:9:"published";a:1:{i:0;a:5:{s:4:"data";s:20:"2009-11-06T20:15:00Z";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"updated";a:1:{i:0;a:5:{s:4:"data";s:20:"2009-11-06T20:23:30Z";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"summary";a:1:{i:0;a:5:{s:4:"data";s:215:"If you follow me on Twitter, you may have noticed I silently launched Onyx a few weeks ago.&nbsp; In a nutshell, as described on the Onyx homepage ..."Onyx is a social file management tool I built to help me keep...";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:6:"author";a:1:{i:0;a:6:{s:4:"data";s:23:"
        
        
    ";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:1:{s:27:"http://www.w3.org/2005/Atom";a:2:{s:4:"name";a:1:{i:0;a:5:{s:4:"data";s:11:"Mark Kolich";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:3:"uri";a:1:{i:0;a:5:{s:4:"data";s:19:"http://mark.koli.ch";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}}s:8:"category";a:3:{i:0;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:4:"beta";s:5:"label";s:4:"beta";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:1;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:4:"onyx";s:5:"label";s:4:"onyx";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:2;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:3:"php";s:5:"label";s:3:"php";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"content";a:1:{i:0;a:5:{s:4:"data";s:3641:"
        <span class="mt-enclosure mt-enclosure-image" style="display: inline;"><img alt="onyx-logo.jpg" src="http://mark.koli.ch/2009/10/16/onyx-logo.jpg" class="mt-image-left" style="margin: 0pt 20px 20px 0pt; float: left;" height="115" width="108" /></span>If you follow <a href="http://twitter.com/markkolich">me on Twitter</a>, you may have noticed I silently launched <a href="https://onyx.koli.ch/">Onyx</a> a few weeks ago.&nbsp; In a nutshell, as described on the <a href="https://onyx.koli.ch/">Onyx homepage</a> ...<br /><br /><i>"Onyx is a social file management tool I built to help me keep track of,
organize, and share my digital archive. While browsing the web, I tend
to accumulate a lot of junk; if I like something, I save it. If I see a
cool application of some sort, I'll take a screen shot. If I find a
cool song, I'll snag it for later. Or, if I have an important document
I need to archive, I'll store it. All of this digital content was
sitting around in a relatively unorganized and unsearchable set of
files and directories on a local file system. Onyx is my solution to
this digital content clutter problem. Files and bookmarks uploaded into
Onyx can be protected, searched, organized and shared much easier than
a set of files and directories on my local disk."</i><br /><br />Yep.<br /><br />Onyx was a chance for me to "cross off" an important task on my digital
TODO list that's been hanging over my head for a while: organize and
archive all of my digital crap.&nbsp; It also gave me a chance to play with
some new technologies I've been wanting to integrate into a real
project for quite a while, like jQuery UI's <a href="http://jqueryui.com/demos/draggable/">draggable</a> and <a href="http://jqueryui.com/demos/droppable/">droppable</a>.&nbsp; I also <a href="http://mark.koli.ch/2009/10/base36-encoding-for-tiny-urls-with-php.html">learned how to base-36 encode numbers for a tiny URL</a>, and solved a <a href="http://mark.koli.ch/2009/10/internet-explorer-cant-open-file-via-https-try-removing-the-pragma-header.html">very annoying problem using HTTPS with Internet Explorer</a>.<br /><br />In the last 24-hours, I finished uploading all of my personal, and public, digital content into Onyx <a href="https://onyx.koli.ch/get/1/mark">which you can browse here</a> from my Onyx home directory.&nbsp; Of course, like any good file management solution, my personal/private files are protected.&nbsp; What you'll see in my home directory are files and folders I've allowed the public to view.<br /><br />For the curious software engineer, Onyx is written entirely in PHP running on Apache 2.2.3.&nbsp; I'm also using a <a href="http://mark.koli.ch/2009/08/howto-implement-a-url-pattern-interpreter-similar-to-django-and-ror-in-php.html">clever little mod_rewrite hack in Apache to drop the .php on each Onyx URL</a>.&nbsp; Dropping the .php makes my URL's look a little cleaner; hipster Django and RoR can suck on that one.&nbsp; You may also ask why I named this project "Onyx".&nbsp; As <a href="http://en.wikipedia.org/wiki/Onyx">described here on Wikipedia</a>, Onyx is a type of colorful layered quartz which contains bands of almost every color.&nbsp; This colorful layering reminded me of the layered structure of a file system: files, folders, bookmarks, etc. all mashed together.&nbsp; Hence, Onyx.<br /><br />If you'd like to read a little more about my Onyx project, you might find <a href="http://mark.koli.ch/2009/10/onyx-my-custom-solution-to-the-digital-clutter-problem.html">this post interesting</a>.&nbsp; Thoughts and feedback are always welcome.<br /><br />Rock on.<br />
        
    ";s:7:"attribs";a:2:{s:0:"";a:1:{s:4:"type";s:4:"html";}s:36:"http://www.w3.org/XML/1998/namespace";a:2:{s:4:"lang";s:5:"en-US";s:4:"base";s:20:"http://mark.koli.ch/";}}s:8:"xml_base";s:20:"http://mark.koli.ch/";s:17:"xml_base_explicit";b:1;s:8:"xml_lang";s:5:"en-US";}}}}}i:2;a:6:{s:4:"data";s:68:"
    
    
    

    
    

    
    
    
    
    
    
    
    
";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:1:{s:27:"http://www.w3.org/2005/Atom";a:9:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:70:"Google Dashboard Fail, and Blocking Google Tracking Cookies in Firefox";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:3:"rel";s:9:"alternate";s:4:"type";s:9:"text/html";s:4:"href";s:109:"http://mark.koli.ch/2009/11/google-dashboard-fail-and-blocking-the-google-tracking-cookie-in-firefox.html?rss";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:2:"id";a:1:{i:0;a:5:{s:4:"data";s:29:"tag:mark.koli.ch,2009://1.210";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:9:"published";a:1:{i:0;a:5:{s:4:"data";s:20:"2009-11-06T05:02:00Z";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"updated";a:1:{i:0;a:5:{s:4:"data";s:20:"2009-11-07T20:26:02Z";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"summary";a:1:{i:0;a:5:{s:4:"data";s:237:"Today, the spoiled elitists at Google announced the release of Google Dashboard.&nbsp; It's a way for you to see, in reasonable detail, what Google knows about you based on the Google services you use. Their blog claims, "in an effort...";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:6:"author";a:1:{i:0;a:6:{s:4:"data";s:23:"
        
        
    ";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:1:{s:27:"http://www.w3.org/2005/Atom";a:2:{s:4:"name";a:1:{i:0;a:5:{s:4:"data";s:11:"Mark Kolich";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:3:"uri";a:1:{i:0;a:5:{s:4:"data";s:19:"http://mark.koli.ch";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}}s:8:"category";a:3:{i:0;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:11:"commonsense";s:5:"label";s:11:"commonsense";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:1;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:16:"goodluckwiththat";s:5:"label";s:16:"goodluckwiththat";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:2;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:6:"google";s:5:"label";s:6:"google";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"content";a:1:{i:0;a:5:{s:4:"data";s:4023:"
        <span class="mt-enclosure mt-enclosure-image" style="display: inline;"><a href="http://mark.koli.ch/2009/11/05/google-cookie-block.png"><img alt="google-cookie-block.png" src="http://mark.koli.ch/assets_c/2009/11/google-cookie-block-thumb-200x221.png" class="mt-image-left" style="margin: 0pt 20px 20px 0pt; float: left;" height="221" width="200" /></a></span>Today, the spoiled elitists at Google announced the release of <a href="http://googleblog.blogspot.com/2009/11/transparency-choice-and-control-now.html">Google Dashboard</a>.&nbsp; It's a way for you to see, in reasonable detail, what Google knows about you based on the Google services you use. Their blog claims, "in an effort to provide you with greater
transparency and control over their own data, we've built the Google
Dashboard." Clever.<br /><br />What's bothersome to me is that I need a Google Account to see what Google supposedly knows about me.&nbsp; Well, what about those cute little <b>.google.com</b> cookies they <a href="http://mark.koli.ch/2009/11/05/google-cookie-block.png">shove into my browser when I use their search engine</a>?&nbsp; IMHO, Google Dashboard is missing one key feature: the ability to clearly show me what Google knows about me and my web-search history, <b>anonymously</b>, based on the already unique ID tracking numbers in those cookies.&nbsp; Google, why do I need an account to see what you've learned about me based on my "anonymous" web-history?<br /><br />There's probably only a few realistic explanations for why Google wouldn't let you see this information:<br /><br /><ol><li>Their cookies aren't actually used for tracking of web-searches and user habits.&nbsp; I suppose this is a possibility.<br /></li><li>Or, more likely, analyzing your web-search traffic is where the real bacon is.&nbsp; And, not surprisingly, Google doesn't want to show us the real underlying data their advertising engine uses to show us ads, which is their primary revenue stream.&nbsp; I guess I don't blame them.&nbsp; After all, they are just another public corporation with shareholder responsibilities.<br /></li></ol><br /><b>I'm awfully tired of the world bending over and blindly accepting everything Google throws at us as the greatest thing since sliced bread.&nbsp; If you really understand how Google makes their money, you should also try to understand what Google is not showing us, or not telling us, and why.</b><br /><br /><br /><span style="font-size: 1.1em; font-weight: bold;">Blocking Google Cookies in Firefox</span><br /><br />For the most part, I've given up on Google.&nbsp; Their web-search is fine, but I don't particularly enjoy the fact that my web-search and browsing history is "anonymously" tracked behind my back.&nbsp; If you'd like to permanently, or temporarily, block Google from inserting their nosy tracking cookies into your browser you can easily do so by setting a "cookie exception" in Firefox (assuming you use Firefox):<br /><br /><ol><li>Click the Tools menu, and select "Options...".</li><li>Click the Privacy tab.</li><li>Click the "Exceptions..." button.</li><li>In the "Address of web site:" box, enter ".google.com" no quotes and click Block to add the google.com domain to your blocked list.<br /></li></ol><br /><span class="mt-enclosure mt-enclosure-image" style="display: inline;"><a href="http://mark.koli.ch/2009/11/05/google-block-cookie-howto.png"><img alt="google-block-cookie-howto.png" src="http://mark.koli.ch/assets_c/2009/11/google-block-cookie-howto-thumb-400x395.png" class="mt-image-none" style="" height="395" width="400" /></a></span><br /><br /><b>A few blog readers astutely pointed out that if you block cookies from .google.com, you won't be able to login to any Google services.&nbsp; Yes, I know that.&nbsp; And for the record, I don't use Gmail or any other Google Account that would require me to login on a regular basis.&nbsp; When I need to login to my Google Code account, I temporary unblock .google.com, and login.</b><br />
        
    ";s:7:"attribs";a:2:{s:0:"";a:1:{s:4:"type";s:4:"html";}s:36:"http://www.w3.org/XML/1998/namespace";a:2:{s:4:"lang";s:5:"en-US";s:4:"base";s:20:"http://mark.koli.ch/";}}s:8:"xml_base";s:20:"http://mark.koli.ch/";s:17:"xml_base_explicit";b:1;s:8:"xml_lang";s:5:"en-US";}}}}}i:3;a:6:{s:4:"data";s:63:"
    
    
    

    
    

    
    
    
    
    
    
    
";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:1:{s:27:"http://www.w3.org/2005/Atom";a:9:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:71:"Controlling When and Where Java Writes Out its Permgen and Heap to Disk";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:3:"rel";s:9:"alternate";s:4:"type";s:9:"text/html";s:4:"href";s:108:"http://mark.koli.ch/2009/10/controlling-when-and-where-java-writes-out-its-permgen-and-heap-to-disk.html?rss";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:2:"id";a:1:{i:0;a:5:{s:4:"data";s:29:"tag:mark.koli.ch,2009://1.209";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:9:"published";a:1:{i:0;a:5:{s:4:"data";s:20:"2009-10-30T17:10:00Z";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"updated";a:1:{i:0;a:5:{s:4:"data";s:20:"2009-10-30T17:35:14Z";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"summary";a:1:{i:0;a:5:{s:4:"data";s:245:"A blog reader recently contacted me with an interesting question: can you explicitly tell Java when and where to flush its permgen and heap to disk?&nbsp; The answer, based on what I understand about Java and operating system fundamentals, is...";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:6:"author";a:1:{i:0;a:6:{s:4:"data";s:23:"
        
        
    ";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:1:{s:27:"http://www.w3.org/2005/Atom";a:2:{s:4:"name";a:1:{i:0;a:5:{s:4:"data";s:11:"Mark Kolich";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:3:"uri";a:1:{i:0;a:5:{s:4:"data";s:19:"http://mark.koli.ch";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}}s:8:"category";a:2:{i:0;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:4:"java";s:5:"label";s:4:"java";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:1;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:4:"tips";s:5:"label";s:4:"tips";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"content";a:1:{i:0;a:5:{s:4:"data";s:3980:"
        A blog reader recently contacted me with an interesting question: can you explicitly tell Java when and where to flush its <a href="http://blogs.sun.com/jonthecollector/entry/presenting_the_permanent_generation">permgen</a> and heap to disk?&nbsp; The answer, based on what I understand about Java and operating system fundamentals, <b>is no</b>.<br /><br />I can say with much certainty that you can't control where Java saves its heap and permgen (either on disk or in memory).&nbsp; Java itself doesn't know about paging stuff out to disk.&nbsp; It simply asks the operating system for the memory it needs and if the OS can't give it, then either the OS has to fail the request or make room by paging out unused chunks of memory to swap.&nbsp; In other words, Java relies on the host OS to handle this type of stuff.<br /><br />But what if you're dealing with millions of Java objects on a standard computer and you don't have room to keep all of those objects in physical memory?&nbsp; In this case, your only real option is to write code that manually swaps objects in/out of the disk.&nbsp; Of course, this requires that you implement your own swapping mechanism, which isn't too bad.&nbsp; When your Java application needs a set of objects, it loads what it needs into memory from disk, does some stuff with the objects, then writes them back out to disk.<br /><br />Meet <b>java.io.Serializable</b>:<br /><a href="http://java.sun.com/javase/6/docs/api/java/io/Serializable.html">http://java.sun.com/javase/6/docs/api/java/io/Serializable.html</a><br /><br />Here's an example:<br /><br /><pre class="prettyprint">import java.io.ByteArrayOutputStream;<br />import java.io.ObjectOutputStream;<br />import java.io.OutputStream;<br />import java.io.Serializable;<br />import java.util.ArrayList;<br />import java.util.List;<br /><br />public class Dog implements Serializable {<br /><br />  private static final long serialVersionUID = -4367737315167700936L;<br /><br />  private String name_;<br />  private String breed_;<br />  <br />  public Dog (String name, String breed) {<br />    this.name_ = name;<br />    this.breed_ = breed;<br />  }<br />  <br />  @Override<br />  public String toString(){<br />    return String.format("%s:%s", this.name_, this.breed_);<br />  }<br />  <br />  public static void main (String [] args) {<br />    <br />    final List&lt;Dog&gt; dogs = new ArrayList&lt;Dog&gt;();<br />    dogs.add( new Dog("Fido", "mutt") );<br />    dogs.add( new Dog("Clifford", "big red dog") );<br />    <br />    ByteArrayOutputStream os = null;<br />    ObjectOutputStream out = null;<br />    for( Dog d : dogs ){<br />      try {<br /><br />        // To write the dogs out to a file, you'll of course<br />        // need to use a FileOutputStream instead of a<br />        // ByteArrayOutputStream<br />        os = new ByteArrayOutputStream();<br />        out = new ObjectOutputStream(os);<br />        out.writeObject(d);<br />        <br />        // Print the serialized version of Dog<br />        final String serialized = os.toString();<br />        System.out.println(d.toString() + " serialized is: " +<br />              serialized);<br />&nbsp;<br />      } catch (Exception e) {<br />        e.printStackTrace(System.err);<br />      }<br />      finally {<br />        closeQuietly(os);<br />        closeQuietly(out);<br />      }<br />    }<br />    <br />  }<br />  <br />  private static final void closeQuietly(final OutputStream os){<br />    try {<br />      os.close();<br />    } catch (Exception e) {  }<br />  }<br />  <br />}<br /></pre><br />Each of the objects you wish to save to disk will have to implement java.io.Serializable.&nbsp; This will let you convert a Java object into something that can be written out to disk.&nbsp; From there, you will have to write some type of queue or stack control mechanism that will know when, from where, and how to page these objects in and out of the disk.
        
    ";s:7:"attribs";a:2:{s:0:"";a:1:{s:4:"type";s:4:"html";}s:36:"http://www.w3.org/XML/1998/namespace";a:2:{s:4:"lang";s:5:"en-US";s:4:"base";s:20:"http://mark.koli.ch/";}}s:8:"xml_base";s:20:"http://mark.koli.ch/";s:17:"xml_base_explicit";b:1;s:8:"xml_lang";s:5:"en-US";}}}}}i:4;a:6:{s:4:"data";s:73:"
    
    
    

    
    

    
    
    
    
    
    
    
    
    
";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:1:{s:27:"http://www.w3.org/2005/Atom";a:9:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:38:"Base36 Encoding for Tiny URLs With PHP";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:3:"rel";s:9:"alternate";s:4:"type";s:9:"text/html";s:4:"href";s:75:"http://mark.koli.ch/2009/10/base36-encoding-for-tiny-urls-with-php.html?rss";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:2:"id";a:1:{i:0;a:5:{s:4:"data";s:29:"tag:mark.koli.ch,2009://1.207";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:9:"published";a:1:{i:0;a:5:{s:4:"data";s:20:"2009-10-29T00:15:00Z";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"updated";a:1:{i:0;a:5:{s:4:"data";s:20:"2009-10-29T06:45:38Z";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"summary";a:1:{i:0;a:5:{s:4:"data";s:242:"While adding permalink and Twitter support to Onyx last week, I realized that PHP can easily convert a number between two arbitrary bases using its built in base_convert function.&nbsp; This was crucial for me because it meant that I could...";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:6:"author";a:1:{i:0;a:6:{s:4:"data";s:23:"
        
        
    ";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:1:{s:27:"http://www.w3.org/2005/Atom";a:2:{s:4:"name";a:1:{i:0;a:5:{s:4:"data";s:11:"Mark Kolich";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:3:"uri";a:1:{i:0;a:5:{s:4:"data";s:19:"http://mark.koli.ch";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}}s:8:"category";a:4:{i:0;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:6:"base36";s:5:"label";s:6:"base36";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:1;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:4:"code";s:5:"label";s:4:"code";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:2;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:4:"onyx";s:5:"label";s:4:"onyx";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:3;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:3:"php";s:5:"label";s:3:"php";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"content";a:1:{i:0;a:5:{s:4:"data";s:2158:"
        While adding <a href="http://en.wikipedia.org/wiki/Permalink">permalink</a> and Twitter support to <a href="https://onyx.koli.ch/">Onyx</a> last week, I realized that PHP can easily convert a number between two arbitrary bases using its built in <a href="http://php.net/manual/en/function.base-convert.php">base_convert function</a>.&nbsp; This was crucial for me because it meant that I could quickly generate a base-36 encoded string from a standard base-10 number:<br /><br /><pre class="prettyprint">$tiny = base_convert($key, 10, 36);<br /></pre><br />As <a href="http://en.wikipedia.org/wiki/Base_36">Wikipedia explains</a>, "...the choice of 36 is convenient in that the digits can be represented using the Arabic numerals 0-9 and the Latin letters A-Z.&nbsp; Base 36 is therefore the most compact case-insensitive alphanumeric numeral system using ASCII characters...".&nbsp; Not to mention, it's the highest radix most languages support by default.<br /><br />I built <a href="https://onyx.koli.ch/">Onyx</a> to maintain a list of files (as inode's) in a MySQL database table.&nbsp; Luckily, the inode's are stored in this table as auto incrementing BIGINT(20)'s, which are of course, base-10 encoded numbers:<br /><br /><pre class="prettyprint">CREATE TABLE files (<br /><br />  f_inode BIGINT(20) NOT NULL AUTO_INCREMENT,<br />  ...<br /><br />  INDEX inode_index ( f_inode ),<br />  PRIMARY KEY ( f_inode ),<br />  ...<br /><br />) TYPE=InnoDB;<br /></pre><br />Base-36 encoding my inode's is key because this means that I can easily, for example, convert base-10 inode 3,032 into "2c8" base-36 for a tiny URL.&nbsp; From there, it's simply a matter of using the base-36 encoded string in
a tiny/shortened permalink URL to refer to the correct file/inode on
Onyx.&nbsp; Yes, this is a poor example because I'm only saving 1 character in a supposedly shorter URL ("3032" vs "2c8").&nbsp; However, this makes a lot more sense with larger base-10 numbers like 105,621,983 which condenses nicely into "1qvufz" base-36.&nbsp; Personally, I'd rather see /1qvufz on the end of a "tiny" URL than /105621983.<br /><br />Enjoy.<br />
        
    ";s:7:"attribs";a:2:{s:0:"";a:1:{s:4:"type";s:4:"html";}s:36:"http://www.w3.org/XML/1998/namespace";a:2:{s:4:"lang";s:5:"en-US";s:4:"base";s:20:"http://mark.koli.ch/";}}s:8:"xml_base";s:20:"http://mark.koli.ch/";s:17:"xml_base_explicit";b:1;s:8:"xml_lang";s:5:"en-US";}}}}}i:5;a:6:{s:4:"data";s:73:"
    
    
    

    
    

    
    
    
    
    
    
    
    
    
";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:1:{s:27:"http://www.w3.org/2005/Atom";a:9:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:108:"Bundle Java (the JRE) and Launch a Java App with 7zip SFX! ... (Convert Java Apps to an Executable, sort of)";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:3:"rel";s:9:"alternate";s:4:"type";s:9:"text/html";s:4:"href";s:92:"http://mark.koli.ch/2009/10/bundle-java-the-jre-and-launch-a-java-app-with-7zip-sfx.html?rss";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:2:"id";a:1:{i:0;a:5:{s:4:"data";s:29:"tag:mark.koli.ch,2009://1.206";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:9:"published";a:1:{i:0;a:5:{s:4:"data";s:20:"2009-10-27T04:00:00Z";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"updated";a:1:{i:0;a:5:{s:4:"data";s:20:"2009-10-27T07:15:18Z";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"summary";a:1:{i:0;a:5:{s:4:"data";s:254:"I've been playing around with a lot of installer type stuff recently.&nbsp; I discovered that Mozilla Firefox uses the 7zip SFX install launcher (if that's what you call it?) to kick off the Firefox installation process.&nbsp; I started playing around...";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:6:"author";a:1:{i:0;a:6:{s:4:"data";s:23:"
        
        
    ";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:1:{s:27:"http://www.w3.org/2005/Atom";a:2:{s:4:"name";a:1:{i:0;a:5:{s:4:"data";s:11:"Mark Kolich";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:3:"uri";a:1:{i:0;a:5:{s:4:"data";s:19:"http://mark.koli.ch";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}}s:8:"category";a:4:{i:0;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:4:"7zip";s:5:"label";s:4:"7zip";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:1;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:10:"installers";s:5:"label";s:10:"installers";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:2;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:4:"java";s:5:"label";s:4:"java";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:3;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:3:"sfx";s:5:"label";s:3:"sfx";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"content";a:1:{i:0;a:5:{s:4:"data";s:16607:"
        <span class="mt-enclosure mt-enclosure-image" style="display: inline;"><a href="http://mark.koli.ch/2009/10/26/7zip-sfx-extracting-shot.png"><img alt="7zip-sfx-extracting-shot.png" src="http://mark.koli.ch/assets_c/2009/10/7zip-sfx-extracting-shot-thumb-200x102.png" class="mt-image-left" style="margin: 0pt 20px 20px 0pt; float: left;" height="102" width="200" /></a></span>I've been playing around with a lot of installer type stuff recently.&nbsp; I discovered that <a href="http://howto.gumph.org/content/customize-firefox-installer/">Mozilla Firefox uses the 7zip SFX install launcher</a> (if that's what you call it?) to kick off the Firefox installation process.&nbsp; I started playing around with <a href="http://7zsfx.solta.ru/en/">7zip SFX, and realized that you can do some pretty cool stuff with it</a>.&nbsp; In fact, I discovered that you can actually bundle a Java app and the Java Runtime Environment (JRE) into your own little 7zip SFX launcher.&nbsp; Naturally, this means you can write a Java app and then let your users start it by double clicking a native Win32 .exe.&nbsp; And best of all, because your launcher contains the Java Runtime Environment, the user does not have to have a JRE installed on their system to run your application!&nbsp; The launcher extracts the JRE and your app to a temporary directory, then launches it using that freshly extracted JRE.<br /><br />Continue reading for the details ...
        <br /><span style="font-size: 1.1em; font-weight: bold;">1 - Why Is This Useful</span><br /><br />Java is fantastic for its write once, run anywhere methodology.&nbsp; Only problem is, unlike a native Windows app, you need a JVM/JRE to run a Java application.&nbsp; Most vendors who sell software written in Java tell their users or customers that they need to install a JRE first before they can run the app.&nbsp; This makes sense, but it's a slight (err, huge) inconvenience; Sun's Java installer is bulky and often cumbersome.&nbsp; Wouldn't it be nice if you could avoid that forced installation step, and simply ship a supported Java runtime with your Java application?&nbsp; This way, the user simply double clicks an .exe, a launcher extracts a supported JRE, and starts.&nbsp; In short, the user doesn't have to install a JRE  at all, but rather the JRE they need is simply extracted to a temporary directory and your application starts using that freshly extracted JRE.&nbsp; Further, when the user exits the application, the temporary JRE directory your app launcher created is automatically cleaned up, and all is well.<br /><br />Not surprisingly, this is completely doable using <a href="http://7zsfx.solta.ru/en/">7zip SFX</a>.&nbsp; However, note that if you choose to ship the JRE with your launcher, you can
expect your executable to be <b>approximately 16MB larger</b> than it would be
without the JRE.&nbsp; IMHO, 16MB is a small price to pay for the added convenience of not having to install another piece of bloated software.&nbsp; Plus you know that the JRE your launcher extracts and starts your application with fully supports your Java app; you don't have to worry about the Java updater updating the JRE on the user's system behind your back which might break your app.<br /><br /><br /><span style="font-size: 1.1em; font-weight: bold;">2 - Getting Started</span><br /><br />Before you start packaging up your app with 7zip, you'll probably want to <a href="http://mark.koli.ch/2009/10/26/7zipsfx-launch-java-example-pack.zip">download my complete example pack</a>.&nbsp; This ZIP file contains everything you'll need to get started, including a ready to ship JRE (Java 6 Update 16) and an Ant build file.&nbsp; Note that you do not need to install 7zip; I've packed the necessary 7zip.exe to create the archive with the <a href="http://mark.koli.ch/2009/10/26/7zipsfx-launch-java-example-pack.zip">example pack</a>.&nbsp; However, if you want to install 7zip, can <a href="http://www.7-zip.org/download.html">download the installer here</a> or <a href="https://onyx.koli.ch/x2v">from my mirror on Onyx</a>.&nbsp; This sample pack is also an Eclipse project.&nbsp; If you work out of Eclipse, you can import the .project inside of the example pack into your Eclipse IDE.<br /><br />Or, if you want to see the <b>7zSD.sfx launcher in action</b>, <a href="http://mark.koli.ch/2009/10/26/7zipsfx-launch-java-example-exe.zip">download  the pre-built demo</a> launcher.<br /><br /><br /><span style="font-size: 1.1em; font-weight: bold;">3 - Fundamentals</span><br /><br />Here's how this all works.&nbsp; 7zip (and other ZIP installer type packages) provide SFX launchers.&nbsp; These launchers are essentially native Windows executables that understand how to extract an archive to a temporary directory, and launch an application (usually another installer).&nbsp; This is how the <a href="http://howto.gumph.org/content/customize-firefox-installer/">Mozilla Firefox installer works</a>: when you launch the "installer" the extracting files dialog that opens is actually the 7zip SFX launcher extracting the real "setup.exe" to a temporary directory.&nbsp; Once done, it starts setup.exe to complete the installation process.<br /><br />In this case, the basic principle is the same, except I'm using the 7zip SFX launcher to extract my application and required JRE components to a temporary directory, and then start it.&nbsp; Producing a native Windows SFX launcher is quite easy; you need to binary concatenate three files together: the SFX launcher, an app.tag configuration file, and a 7zip archive.&nbsp; In Windows, using the <b>copy</b> command, this looks something like:<br /><br /><pre class="prettyprint">C:\&gt; copy /b 7zSD.sfx + app.tag + app.7z start.exe</pre><br />This produces start.exe, a portable native Windows app that contains everything your Java application needs to run in a single executable!&nbsp; When run, start.exe will use 7zSD.sfx to extract the contents of app.7z to a temporary directory, and launch whatever application you've defined in app.tag.&nbsp; Pretty freakin' sweet if I say so myself.<br /><br /><br /><span style="font-size: 1.1em; font-weight: bold;">4 - My Sample Java App</span><br /><br />My example Java app is very straightforward.&nbsp; Yours will, of course, be more complicated.&nbsp; My sample app simply opens a <a href="http://java.sun.com/javase/6/docs/api/javax/swing/JOptionPane.html">JOptionPane</a> to display the current "working directory" (where the SFX launcher was started from) and the "temporary directory" (the temp directory where the SFX launcher extracted the JRE and application files to).<br /><br /><pre class="prettyprint">package com.kolich.sevenzip.example;<br /><br />import java.io.File;<br />import java.io.IOException;<br /><br />import javax.swing.JFrame;<br />import javax.swing.JOptionPane;<br />import javax.swing.SwingUtilities;<br /><br />public class StartHere {<br />  <br />  private File workingDir_;<br />  private File tempDir_;<br />  <br />  public StartHere(File root, File temp){<br />    this.workingDir_ = root;<br />    this.tempDir_ = temp;<br />  }<br />  <br />  /**<br />   * The working directory, where the application was<br />   * started from.<br />   * @return<br />   */<br />  public File getWorkingDir(){<br />    return this.workingDir_;<br />  }<br />  <br />  /**<br />   * The temp directory, where the launcher extracted<br />   * your app and JRE to on the users' system.<br />   * @return<br />   */<br />  public File getTempDir(){<br />    return this.tempDir_;<br />  }<br /><br />  public static void main(String[] args)<br />    throws Exception {<br />    <br />    File root;<br />    try {<br />      root = new File(args[0]);<br />    } catch ( Exception e ) {<br />      root = new File(".");<br />    }<br />    <br />    File temp;<br />    try {<br />      temp = new File(args[1]);<br />    } catch ( Exception e ) {<br />      temp = new File(".");<br />    }<br />    <br />    final StartHere sh = new StartHere(root, temp);    <br />    Runnable worker = new Runnable() {<br />        public void run() {<br />          showMessageDialog(sh);<br />          System.exit(0);<br />        }<br />    };<br />    SwingUtilities.invokeLater(worker);<br />    <br />  }<br />  <br />  private static void showMessageDialog(StartHere sh) {<br />    try {<br />      JOptionPane.showMessageDialog(new JFrame(),<br />        "A java app launched by 7zip SFX!\n\n" +<br />        "My working directory is:\n" +<br />        sh.getWorkingDir().getCanonicalPath() +<br />        "\n\nAnd I've been extracted to temp directory:\n" +<br />        sh.getTempDir().getCanonicalPath() );<br />    } catch (IOException e) {<br />      e.printStackTrace( System.err );<br />    }<br /><br />  }<br />  <br />}</pre><br />Here's a screen shot:<br /><br /><span class="mt-enclosure mt-enclosure-image" style="display: inline;"><a href="http://mark.koli.ch/2009/10/26/7zip-sfx-extracting-shot2.png"><img alt="7zip-sfx-extracting-shot2.png" src="http://mark.koli.ch/assets_c/2009/10/7zip-sfx-extracting-shot2-thumb-400x226.png" class="mt-image-none" style="" height="226" width="400" /></a></span><br /><br />The Ant build script in my example pack compiles this app and creates app.jar, a runnable JAR file.<br /><br /><br /><span style="font-size: 1.1em; font-weight: bold;">5 - The App.tag Configuration File</span><br /><br />I'm using the 7zSD.sfx launcher by Oleg Scherbakov at <a href="http://7zsfx.solta.ru/en/">http://7zsfx.solta.ru/en/</a>.&nbsp; There are a ton of configuration options as <a href="http://7zsfx.solta.ru/en/configinfo.html">described here</a> on Oleg's web-site.&nbsp; In the example, my app.tag configuration file is as follows:<br /><br /><pre class="prettyprint">;!@Install@!UTF-8!<br />Title="7ZIP Java Launcher Example"<br />ExtractDialogText="Extracting ..."<br />GUIFlags="32"<br />ExtractTitle="Extracting"<br />FinishMessage="Application stopped."<br />RunProgram="launcher\jre\bin\javaw.exe -jar launcher\app.jar \"%%S\" \"%%T\""<br />;!@InstallEnd@!<br /></pre><br />There's nothing too complicated about the configuration file.&nbsp; In this example, I'm simply extracting the 7zip file included with the native SFX launcher and starting launcher\jre\bin\javaw.exe, which is the JRE packaged with the launcher (found under launcher\jre in the example pack).&nbsp; The %%S property in the configuration file is the directory that contains the SFX executable (where the user started it from).&nbsp; The %%T property is the temporary directory where the SFX launcher placed the extracted JRE and application files.&nbsp; Note that when the Java application exits, the SFX launcher will automatically delete/cleanup this temporary directory.<br /><br />This example simply asks 7zSD.sfx to extract and then start launcher\app.jar using launcher\jre\bin\javaw.exe. <br /><br /><br /><span style="font-size: 1.1em; font-weight: bold;">6 - The Ant Build File</span><br /><br />My ant build file does a few things.&nbsp; First, it compiles the Java app and packages it into a runnable JAR file.&nbsp; From there, it uses 7zip to compress the JRE and the resulting JAR file into app.7z.&nbsp; Finally, it uses <a href="http://ant.apache.org/manual/CoreTasks/concat.html">Ant's concat task</a> to binary concatenate 7zSD.sfx, app.tag and the app.7z file together.&nbsp; The result is start.exe, a native self-contained Windows executable that contains the JRE and Java app itself!<br /><br />Note that the JRE is 7zip'ed inside of app.7z.&nbsp; This is how the JRE is shipped/included with the launcher.<br /><br /><pre class="prettyprint">&lt;project name="7zipexample" default="package.7zipexample"&gt;<br />  <br />  &lt;property name="src.dir" location="${basedir}/src/com/kolich"/&gt;<br />  &lt;property name="build.dir" location="${basedir}/build"/&gt;<br />  &lt;property name="launcher.dir" location="${basedir}/launcher"/&gt;<br />  &lt;property name="7zip.exe.dir" location="${basedir}/7zip"/&gt;<br />  &lt;property name="sfx.dir" location="${basedir}/sfx"/&gt;<br />  &lt;property name="dist.dir" location="${basedir}/dist"/&gt;<br />  <br />  &lt;target name="clean.7zipexample" depends="clean.build.7zipexample,<br />      clean.dist.7zipexample" /&gt;<br />  <br />  &lt;target name="clean.build.7zipexample"&gt;<br />    &lt;delete includeemptydirs="true"&gt;<br />    &lt;fileset dir="${build.dir}" includes="**/*" /&gt;<br />    &lt;/delete&gt;<br />  &lt;/target&gt;<br />  <br />  &lt;target name="clean.dist.7zipexample"&gt;<br />    &lt;delete includeemptydirs="true"&gt;<br />    &lt;fileset dir="${dist.dir}" includes="**/*" /&gt;<br />      &lt;fileset dir="${launcher.dir}" includes="app.jar" /&gt;<br />      &lt;fileset dir="${launcher.dir}" includes="app.7z" /&gt;<br />    &lt;/delete&gt;<br />  &lt;/target&gt;<br /> <br />  &lt;target name="package.7zipexample" depends="clean.7zipexample"&gt;<br />    <br />    &lt;!-- compile the source --&gt;<br />    &lt;javac destdir="${build.dir}" srcdir="${src.dir}"&gt;<br />      &lt;include name="**/*.java"/&gt;<br />    &lt;/javac&gt;<br />    <br />    &lt;!-- create a runnable jar --&gt;<br />    &lt;jar destfile="${launcher.dir}/app.jar" manifest="Manifest.mf"&gt;<br />      &lt;fileset dir="${build.dir}"&gt;<br />        &lt;include name="**/*.class" /&gt;<br />      &lt;/fileset&gt;<br />    &lt;/jar&gt;<br />    <br />    &lt;!-- compress all of the files we need to down with 7zip --&gt;<br />    &lt;exec executable="${7zip.exe.dir}/7z.exe" failonerror="true"&gt;<br />      &lt;arg value="a" /&gt;<br />      &lt;arg value="-t7z" /&gt;<br />      &lt;arg value="-r" /&gt;<br />      &lt;arg value="${launcher.dir}\app.7z" /&gt;<br />      &lt;arg value="${launcher.dir}" /&gt;<br />    &lt;/exec&gt;<br />    <br />    &lt;!-- concat the files we need together to produce a binary<br />        launcher --&gt;<br />    &lt;concat destfile="${dist.dir}/start.exe" binary="yes"&gt;<br />      &lt;fileset file="${sfx.dir}/7zSD.sfx" /&gt;<br />      &lt;fileset file="${sfx.dir}/app.tag" /&gt;<br />      &lt;fileset file="${launcher.dir}/app.7z" /&gt;<br />    &lt;/concat&gt;<br />    <br />  &lt;/target&gt;<br />  <br />&lt;/project&gt;<br /></pre><br />You can always manually build the installer package yourself, but why bother if you have an Ant build file ready to do the work for you?&nbsp; When you run the <b>package.7zipexample</b> build target in the example build file, the resulting ready to launch executable can be found at dist\start.exe.&nbsp; Start.exe is your shippable application.&nbsp; Again, no pre-installed Java Runtime Environment required!<br /><br /><br /><span style="font-size: 1.1em; font-weight: bold;">7 - Changing the Icons and Version Information</span><br /><br />If you use Oleg's 7zSD.sfx launcher as is, you'll notice the icon attached to the resulting .exe is quite poor.&nbsp; In all likelihood, you'll want to replace the icon with one for your application.&nbsp; Doing so is quite easy with <a href="http://www.angusj.com/resourcehacker/">Resource Hacker</a>, a freeware utility to view, modify, rename, add, delete and extract resources in 32bit Windows executables and resource files.&nbsp; Detailed instructions on <a href="http://7zsfx.solta.ru/en/icon.html">how to replace the icon can be found here on the 7zSD.sfx web-site</a>.&nbsp; Note that you can also use Resource Hacker to edit the version and copyright details included in the resulting executable as shown below.<br /><br /><span class="mt-enclosure mt-enclosure-image" style="display: inline;"><a href="http://mark.koli.ch/2009/10/26/7zip-sfx-change-resources.png"><img alt="7zip-sfx-change-resources.png" src="http://mark.koli.ch/assets_c/2009/10/7zip-sfx-change-resources-thumb-400x284.png" class="mt-image-none" style="" height="284" width="400" /></a></span><br /><br />&nbsp; <br />In summary, it's fairly straightforward to bundle and ship the Java Runtime Environment with your Java application using 7zip SFX.&nbsp; Heck,  Sun allows and even tells you how to redistribute the JRE with your applications (just <a href="http://java.sun.com/j2se/1.5.0/jre/README">read the LICENSE file provided</a> with any JRE installation).&nbsp; In the near future, I plan on converting <a href="http://mark.koli.ch/2009/09/a-really-simple-web-server-using-restlet.html">Cappuccino</a>, a really simple web-server powered by Restlet, to a 7zip SFX enabled app.<br /><br />Good luck, and don't hesitate to contact me if you have any questions or concerns.&nbsp; Enjoy!<br />
    ";s:7:"attribs";a:2:{s:0:"";a:1:{s:4:"type";s:4:"html";}s:36:"http://www.w3.org/XML/1998/namespace";a:2:{s:4:"lang";s:5:"en-US";s:4:"base";s:20:"http://mark.koli.ch/";}}s:8:"xml_base";s:20:"http://mark.koli.ch/";s:17:"xml_base_explicit";b:1;s:8:"xml_lang";s:5:"en-US";}}}}}i:6;a:6:{s:4:"data";s:78:"
    
    
    

    
    

    
    
    
    
    
    
    
    
    
    
";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:1:{s:27:"http://www.w3.org/2005/Atom";a:9:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:76:"Internet Explorer Can't Open Files Via HTTPS: Try Removing The Pragma Header";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:3:"rel";s:9:"alternate";s:4:"type";s:9:"text/html";s:4:"href";s:110:"http://mark.koli.ch/2009/10/internet-explorer-cant-open-file-via-https-try-removing-the-pragma-header.html?rss";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:2:"id";a:1:{i:0;a:5:{s:4:"data";s:29:"tag:mark.koli.ch,2009://1.205";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:9:"published";a:1:{i:0;a:5:{s:4:"data";s:20:"2009-10-23T05:50:00Z";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"updated";a:1:{i:0;a:5:{s:4:"data";s:20:"2009-10-23T06:25:28Z";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"summary";a:1:{i:0;a:5:{s:4:"data";s:239:"While wrapping up a few bugs on one of my latest projects, Onyx, I encountered one of the most annoying and irritating IE nuisances to date.&nbsp; Let me reiterate my hatred for Internet Explorer.&nbsp; So here's the deal.&nbsp; In PHP,...";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:6:"author";a:1:{i:0;a:6:{s:4:"data";s:23:"
        
        
    ";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:1:{s:27:"http://www.w3.org/2005/Atom";a:2:{s:4:"name";a:1:{i:0;a:5:{s:4:"data";s:11:"Mark Kolich";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:3:"uri";a:1:{i:0;a:5:{s:4:"data";s:19:"http://mark.koli.ch";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}}s:8:"category";a:5:{i:0;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:4:"fail";s:5:"label";s:4:"fail";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:1;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:4:"http";s:5:"label";s:4:"http";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:2;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:6:"iefail";s:5:"label";s:6:"iefail";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:3;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:3:"php";s:5:"label";s:3:"php";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:4;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:3:"ssl";s:5:"label";s:3:"ssl";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"content";a:1:{i:0;a:5:{s:4:"data";s:3142:"
        While wrapping up a few bugs on one of my latest projects, <a href="https://onyx.koli.ch/">Onyx</a>, I encountered one of the most annoying and irritating IE nuisances to date.&nbsp; Let me reiterate my hatred for Internet Explorer.&nbsp; So here's the deal.&nbsp; In PHP, I was serving up a few static files nestled away on the web-server.&nbsp; The user would click a link, my PHP would <a href="http://php.net/manual/en/function.fopen.php">fopen</a> a file, and send it to the browser.&nbsp; Simple enough, and this worked just fine on HTTP.&nbsp; Then, I moved my new web-application to a production environment under HTTPS.&nbsp; Suddenly, some downloads failed on IE with the following error:<br /><br /><b>"Internet Explorer cannot download [file] from [server]. Internet Explorer was not able to open this Internet site. The requested site is either unavailable or cannot be found. Please try again later."</b><br /><br />Here's a screen shot of the error from IE8:<br /><br /><span class="mt-enclosure mt-enclosure-image" style="display: inline;"><a href="http://mark.koli.ch/2009/10/22/ie-cannot-open-file-https.jpg"><img alt="ie-cannot-open-file-https.jpg" src="http://mark.koli.ch/assets_c/2009/10/ie-cannot-open-file-https-thumb-400x197.jpg" class="mt-image-none" style="" height="197" width="400" /></a></span><br /><br /><br />With a little digging, I tracked down the following support pages on <b>microsoft.com</b> that explain the problem:<br /><br /><ul><li><a href="http://support.microsoft.com/kb/316431">http://support.microsoft.com/kb/316431</a> -- Internet Explorer is unable to open Office documents from an SSL Web site.</li><li><a href="http://support.microsoft.com/kb/812935">http://support.microsoft.com/kb/812935</a> -- "Internet Explorer Cannot Download" Error Message When You Use an HTTPS URL to Open an Office Document or PDF File</li></ul>It appears that Internet Explorer gets confused when it sees a Pragma and Cache-Control header together in the same response.&nbsp; And, it has difficulties interpreting these headers properly over HTTPS.&nbsp; As described on <b>microsoft.com</b>, "when Internet Explorer communicates with
a secure Web site through SSL, Internet Explorer enforces any no-cache
request. If the header or headers are present, Internet Explorer does
not cache the file. Consequently, Office cannot open the file."&nbsp; And, when you're using sessions in PHP, the PHP engine automatically by default inserts the Expire, Cache-Control, <b>and</b> Pragma headers in your responses as <a href="http://php.net/manual/en/function.session-cache-limiter.php">explained here</a>. <br /><br />In my case, the <b>solution to this issue was to remove</b> the <a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.32">Pragma header</a> in my HTTP response.&nbsp; In PHP, I forcefully unset the Pragma header with the following code-snippet:<br /><br /><pre class="prettyprint">header("Pragma: ");<br /></pre><br />This successfully clears the Pragma header in my responses, and all is well.&nbsp; With this tweak, IE7 and 8 correctly handle my file downloads.
        
    ";s:7:"attribs";a:2:{s:0:"";a:1:{s:4:"type";s:4:"html";}s:36:"http://www.w3.org/XML/1998/namespace";a:2:{s:4:"lang";s:5:"en-US";s:4:"base";s:20:"http://mark.koli.ch/";}}s:8:"xml_base";s:20:"http://mark.koli.ch/";s:17:"xml_base_explicit";b:1;s:8:"xml_lang";s:5:"en-US";}}}}}i:7;a:6:{s:4:"data";s:78:"
    
    
    

    
    

    
    
    
    
    
    
    
    
    
    
";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:1:{s:27:"http://www.w3.org/2005/Atom";a:9:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:72:"Reliably Checking Windows Bitness (32-bit or 64-bit) With a Tiny C++ App";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:3:"rel";s:9:"alternate";s:4:"type";s:9:"text/html";s:4:"href";s:107:"http://mark.koli.ch/2009/10/reliably-checking-os-bitness-32-or-64-bit-on-windows-with-a-tiny-c-app.html?rss";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:2:"id";a:1:{i:0;a:5:{s:4:"data";s:29:"tag:mark.koli.ch,2009://1.204";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:9:"published";a:1:{i:0;a:5:{s:4:"data";s:20:"2009-10-21T22:04:00Z";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"updated";a:1:{i:0;a:5:{s:4:"data";s:20:"2009-10-27T17:44:46Z";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"summary";a:1:{i:0;a:5:{s:4:"data";s:221:"I threw myself right into the bitness fire this afternoon, trying to figure out how to reliably determine if a Windows OS is 32-bit or native 64-bit.&nbsp; I tried all sorts of things, everything from a VB Script, to a...";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:6:"author";a:1:{i:0;a:6:{s:4:"data";s:23:"
        
        
    ";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:1:{s:27:"http://www.w3.org/2005/Atom";a:2:{s:4:"name";a:1:{i:0;a:5:{s:4:"data";s:11:"Mark Kolich";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:3:"uri";a:1:{i:0;a:5:{s:4:"data";s:19:"http://mark.koli.ch";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}}s:8:"category";a:5:{i:0;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:7:"bitness";s:5:"label";s:7:"bitness";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:1;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:4:"code";s:5:"label";s:4:"code";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:2;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:3:"cpp";s:5:"label";s:3:"cpp";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:3;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:4:"fail";s:5:"label";s:4:"fail";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:4;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:9:"microsoft";s:5:"label";s:9:"microsoft";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"content";a:1:{i:0;a:5:{s:4:"data";s:4822:"
        I threw myself right into the bitness fire this afternoon, trying to figure out how to reliably determine if a Windows OS is 32-bit or native 64-bit.&nbsp; I tried all sorts of things, everything from a VB Script, to a few tiny C++ programs built to issue <a href="http://en.wikipedia.org/wiki/Windows_Management_Instrumentation">WMI queries</a>.&nbsp; I tried using WMI to read the OSArchitecture property from its "SELECT * FROM Win32_OperatingSystem" output, but that failed miserably on Windows XP.&nbsp; As it turns out, the <b>OSArchitecture property you can read via WMI wasn't added until Vista</b>.&nbsp; Nice.&nbsp; So how do we check for 64-bit Windows XP?<br /><br />After about an hour or so of searching, I stumbled across <a href="http://www.tech-archive.net/Archive/DotNet/microsoft.public.dotnet.languages.csharp/2007-06/msg03188.html">this post</a> which described in reasonable detail what I needed to:<br /><br />"In your code, you first need to check the size of IntPtr, if it returns 8 then you are running on a 64-bit OS. If it returns 4, you are running a 32 bit application, so now you need to know whether you are running natively or under WOW64. To get this information you will need to call kernel32.dll API "IsWow64Process" using PInvoke, this API returns a Boolean 'true' if you are running under WOW64, that means you are running 32 bit application on a 64-bit Windows system. Be careful however to check the OS version before calling this API, only XP SP2 and implements this one."<br /><br />How could Microsoft make something that should be so easy, so complicated?&nbsp; What a FAIL.<br /><br />I then found <a href="http://www.neowin.net/forum/lofiversion/index.php/t773130.html">this post</a>, that offered up a nice little 32-bit C++ app one can compile and run to check the real, actual bitness of the OS.&nbsp; For the most part, it does exactly what the first post said I needed to do, with the exception of checking the size of IntPtr's.&nbsp; I cleaned it up a little bit, and <b>successfully compiled it on 32-bit Windows XP with Microsoft Visual C++ 2005</b> (Version 8.0.50).&nbsp; This app checks the bitness of the OS by discovering if it's running under WOW64, or natively as a 32-bit app.&nbsp; <a href="http://en.wikipedia.org/wiki/WoW64">WOW64 stands for Windows-on-Windows</a>, it's the 64-bit only kernel subsystem that lets 32-bit apps run on 64-bit Windows.&nbsp; The bitness checker starts and then asks the Windows kernel if it's running under WOW64.&nbsp; If it is running under WOW64, that clearly means it's a 32-bit app (as compiled) running on a 64-bit OS.&nbsp; If it's not running in WOW64, then we're on a 32-bit OS ...<br /><br /><pre class="prettyprint">#include "stdafx.h"<br />#include &lt;iostream&gt;<br />#include "comutil.h"<br /><br />#define RESPONSE_32_BIT "32"<br />#define RESPONSE_64_BIT "64"<br /><br />using namespace std;<br /><br />typedef BOOL (WINAPI *IW64PFP)(HANDLE, BOOL *);<br /><br />int main(int argc, char **argv){<br /><br />  BOOL res = FALSE;<br /><br />  // When this application is compiled as a 32-bit app,<br />  // and run on a native 64-bit system, Windows will run<br />  // this application under WOW64.  WOW64 is the Windows-<br />  // on-Windows subsystem that lets native 32-bit applications<br />  // run in 64-bit land.  This calls the kernel32.dll<br />  // API to see if this process is running under WOW64.<br />  // If it is running under WOW64, then that clearly means<br />  // this 32-bit application is running on a 64-bit OS,<br />  // and IsWow64Process will return true.<br />  IW64PFP IW64P = (IW64PFP)GetProcAddress(<br />            GetModuleHandle(L"kernel32"), "IsWow64Process");<br /><br />  if(IW64P != NULL){<br />    IW64P(GetCurrentProcess(), &amp;res);<br />  }<br /><br />  cout &lt;&lt; ((res) ? RESPONSE_64_BIT : RESPONSE_32_BIT) &lt;&lt; endl;<br /><br />  return 0;<br />  <br />}<br /></pre><br />Will output "32" on 32-bit Windows and "64" on 64-bit Windows.&nbsp; Download the <a href="http://mark.koli.ch/2009/10/21/bitness-checker.zip">pre-built .exe and .cpp source here</a>.<br /><br /><ul><li><b>Tested and worked on:</b>&nbsp; 32-bit Windows XP Professional SP3, 32-bit Windows Vista Enterprise SP2, 64-bit Windows Vista Enterprise, 32-Bit Windows 7 Home Premium, 64-bit Windows 7 Home Premium.<br /><br /></li><li><strike><b>Did NOT test on:</b> 64-bit Windows XP. I don't have a 64-bit Windows XP box lying around. If you have one, and you can check this code for me, please let me know and I'll be happy to update this post and give you credit for testing it for me.</strike> <a href="http://twitter.com/cmsimike">@cmsimike</a> confirmed on 10/27/09 that my bitness checker also works perfectly on 64-bit Windows XP.<br /></li></ul><br />Cheers.<br />
        
    ";s:7:"attribs";a:2:{s:0:"";a:1:{s:4:"type";s:4:"html";}s:36:"http://www.w3.org/XML/1998/namespace";a:2:{s:4:"lang";s:5:"en-US";s:4:"base";s:20:"http://mark.koli.ch/";}}s:8:"xml_base";s:20:"http://mark.koli.ch/";s:17:"xml_base_explicit";b:1;s:8:"xml_lang";s:5:"en-US";}}}}}i:8;a:6:{s:4:"data";s:68:"
    
    
    

    
    

    
    
    
    
    
    
    
    
";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:1:{s:27:"http://www.w3.org/2005/Atom";a:9:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:84:"Java's "os.arch" System Property is the Bitness of the JRE, NOT the Operating System";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:3:"rel";s:9:"alternate";s:4:"type";s:9:"text/html";s:4:"href";s:116:"http://mark.koli.ch/2009/10/javas-osarch-system-property-is-the-bitness-of-the-jre-not-the-operating-system.html?rss";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:2:"id";a:1:{i:0;a:5:{s:4:"data";s:29:"tag:mark.koli.ch,2009://1.203";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:9:"published";a:1:{i:0;a:5:{s:4:"data";s:20:"2009-10-19T18:15:00Z";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"updated";a:1:{i:0;a:5:{s:4:"data";s:20:"2009-10-27T17:47:32Z";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"summary";a:1:{i:0;a:5:{s:4:"data";s:217:"If you ever use Java to check if a system is 32 or 64-bit, you should know that Java's "os.arch" system property returns the bitness of the JRE, not the OS itself.&nbsp; Sites like this are WRONG; any resource that...";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:6:"author";a:1:{i:0;a:6:{s:4:"data";s:23:"
        
        
    ";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:1:{s:27:"http://www.w3.org/2005/Atom";a:2:{s:4:"name";a:1:{i:0;a:5:{s:4:"data";s:11:"Mark Kolich";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:3:"uri";a:1:{i:0;a:5:{s:4:"data";s:19:"http://mark.koli.ch";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}}s:8:"category";a:3:{i:0;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:7:"bitness";s:5:"label";s:7:"bitness";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:1;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:4:"java";s:5:"label";s:4:"java";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:2;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:4:"lame";s:5:"label";s:4:"lame";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"content";a:1:{i:0;a:5:{s:4:"data";s:2139:"
        If you ever use Java to check if a system is 32 or 64-bit, you should know that Java's "os.arch" system property returns the bitness of the JRE, not the OS itself.&nbsp; Sites <a href="http://www.roseindia.net/java/beginners/OSInformation.shtml">like this are WRONG</a>; any resource that claims Java's "os.arch" property returns the real "architecture of the OS" is lying.&nbsp; Case in point, I recently ran this tiny program on a <b>64-bit Windows 7 machine</b>, with a 32-bit JRE:<br /><br /><pre class="prettyprint">import com.sun.servicetag.SystemEnvironment;<br /><br />public class OSArchLies {<br />  <br />  public static void main(String[] args) {<br />    <br />    // Will say "x86" even on a 64-bit machine<br />    // using a 32-bit Java runtime<br />    SystemEnvironment env =<br />        SystemEnvironment.getSystemEnvironment();<br />    final String envArch = env.getOsArchitecture();<br />    <br />    // The os.arch property will also say "x86" on a<br />    // 64-bit machine using a 32-bit runtime<br />    final String propArch = System.getProperty("os.arch");<br />    <br />    System.out.println( "getOsArchitecture() says =&gt; " + envArch );<br />    System.out.println( "getProperty() says =&gt; " + propArch );<br />    <br />  }<br /><br />}<br /></pre><br />The output from this tiny app on a 64-bit box:<br /><br /><pre class="prettyprint">#/&gt; java OSArchLies<br />getOsArchitecture() says =&gt; x86<br />getProperty() says =&gt; x86</pre><br />In this case, one would expect to see something like "x86_64" or "amd64" instead of just "x86".&nbsp; Bottom line, don't believe what you read online about "os.arch" and other Java system properties.&nbsp; They are usually properties of the <b>JRE/JDK itself, and not necessarily the real properties of the underlying OS or architecture</b>.&nbsp; If you need to check if a system is actually 32 or 64-bit, you should look elsewhere in the system registry or <a href="http://mark.koli.ch/2009/10/reliably-checking-os-bitness-32-or-64-bit-on-windows-with-a-tiny-c-app.html">write your own native app and call it from Java</a>.<br />
        
    ";s:7:"attribs";a:2:{s:0:"";a:1:{s:4:"type";s:4:"html";}s:36:"http://www.w3.org/XML/1998/namespace";a:2:{s:4:"lang";s:5:"en-US";s:4:"base";s:20:"http://mark.koli.ch/";}}s:8:"xml_base";s:20:"http://mark.koli.ch/";s:17:"xml_base_explicit";b:1;s:8:"xml_lang";s:5:"en-US";}}}}}i:9;a:6:{s:4:"data";s:88:"
    
    
    

    
    

    
    
    
    
    
    
    
    
    
    
    
    
";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:1:{s:27:"http://www.w3.org/2005/Atom";a:9:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:55:"Onyx: My Custom Solution to the Digital Clutter Problem";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:3:"rel";s:9:"alternate";s:4:"type";s:9:"text/html";s:4:"href";s:91:"http://mark.koli.ch/2009/10/onyx-my-custom-solution-to-the-digital-clutter-problem.html?rss";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:2:"id";a:1:{i:0;a:5:{s:4:"data";s:29:"tag:mark.koli.ch,2009://1.202";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:9:"published";a:1:{i:0;a:5:{s:4:"data";s:20:"2009-10-17T01:25:00Z";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"updated";a:1:{i:0;a:5:{s:4:"data";s:20:"2009-10-17T05:43:10Z";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"summary";a:1:{i:0;a:5:{s:4:"data";s:213:"In my spare time over the last several weeks, I've been hammering out a new personal project I've had on my to-do list for quite a while.&nbsp; I named it Onyx.&nbsp; Onyx is my solution to an ongoing and often...";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:6:"author";a:1:{i:0;a:6:{s:4:"data";s:23:"
        
        
    ";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:1:{s:27:"http://www.w3.org/2005/Atom";a:2:{s:4:"name";a:1:{i:0;a:5:{s:4:"data";s:11:"Mark Kolich";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:3:"uri";a:1:{i:0;a:5:{s:4:"data";s:19:"http://mark.koli.ch";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}}s:8:"category";a:7:{i:0;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:6:"apache";s:5:"label";s:6:"apache";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:1;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:3:"api";s:5:"label";s:3:"api";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:2;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:5:"cloud";s:5:"label";s:5:"cloud";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:3;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:6:"jquery";s:5:"label";s:6:"jquery";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:4;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:11:"mod_rewrite";s:5:"label";s:11:"mod_rewrite";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:5;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:4:"onyx";s:5:"label";s:4:"onyx";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:6;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:3:"php";s:5:"label";s:3:"php";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"content";a:1:{i:0;a:5:{s:4:"data";s:7933:"
        <span class="mt-enclosure mt-enclosure-image" style="display: inline;"><img alt="onyx-logo.jpg" src="http://mark.koli.ch/2009/10/16/onyx-logo.jpg" class="mt-image-left" style="margin: 0pt 20px 20px 0pt; float: left;" height="115" width="108" /></span>In my spare time over the last several weeks, I've been hammering out a new personal project I've had on my to-do list for quite a while.&nbsp; I named it <a href="http://en.wikipedia.org/wiki/Onyx">Onyx</a>.&nbsp; Onyx is my solution to an ongoing and often frustrating "digital content clutter" problem.<br /><b><br />Why?:</b><br /><br />While browsing the web, I tend to accumulate a lot of junk; if I like something, I save it. If I see a cool application of some sort, I'll take a screen shot. If I find a cool song, I'll snag it for later. Or, if I have an important document I need to archive, I'll store it. As it turns out, all of this digital content was sitting around in a relatively unorganized, unsearchable, and <b>unsharable</b> set of files and directories on a local file system.<br /><br />Onyx is my solution to this problem. Files uploaded into Onyx can be protected, searched, organized, and shared much easier than a set of files and directories sitting on my local disk.&nbsp; Plus, the file storage itself is hosted on my web-server "in the cloud", which means that I can access it using any decent web-enabled device.&nbsp; And, when necessary, I can easily share files and directories in Onyx with friends, family, or co-workers via Twitter, email, or instant messenger.<br /><br /><b>How?:</b><br /><br />Onyx is a web-app written in PHP 5 with a MySQL back end.&nbsp; Data uploaded into Onyx is physically stored in the "cloud" on the web-server file system.&nbsp; This proved to be an interesting and <a href="http://en.wikipedia.org/wiki/Atomicity_%28database_systems%29">challenging atomic transaction problem</a>.&nbsp; Because I'm using a MySQL database AND a file system to organize and store files in Onyx, I have to make sure that my database and file system stay in sync.&nbsp; I could have used a BLOB to store the file data itself inside of my Onyx MySQL database, but I avoided that because there may be cases where I want to access the uploaded files without a database (e.g., if my database crashes, or if I do something stupid, I don't want to lose all of my files in a database table).<br /><br /><b>Where?:</b><br /><br />When ready, Onyx will be available at <a href="http://onyx.koli.ch/">http://onyx.koli.ch</a>.<br /><br /><b>When?:</b><br /><br />In the next few days I'll be putting the finishing touches on Onyx, and plan to release it to the world in beta mode.&nbsp; And, if possible, I hope to add SSL (HTTPS) support for security.<br /><br />Inspiration to build Onyx courtesy of <a href="http://baconfile.com/">Baconfile</a>.&nbsp; You'll notice the fundamental look and feel, and some icons, were kindly borrowed from <a href="http://leahculver.com/">Leah Culver</a> and <a href="http://www.wilsonminer.com/">Wilson Miner</a> of Baconfile.<br /><br />Continue reading for a few screen shots. <br />
        <br /><span style="font-size: 1.1em; font-weight: bold;">1 - The Home Screen</span><br /><br />I'm no user-interface expert, but I built the Onyx UI to be what I think is clean, simple, and elegant.&nbsp; I settled on a dark gray minimalist style color theme after experimenting with several color options.&nbsp; The home screen, as shown below, displays a convenient list of recently added files, newest on top.&nbsp; The "top five" users, determined by the number of files uploaded, are shown under the recently added files list.  Note that only "public" files are shown in the recent files list; files and folders marked private by the user are not visible or accessible to the public.<br /><br /><span class="mt-enclosure mt-enclosure-image" style="display: inline;"><a href="http://mark.koli.ch/2009/10/16/onyx-homescreen.jpg"><img alt="onyx-homescreen.jpg" src="http://mark.koli.ch/assets_c/2009/10/onyx-homescreen-thumb-400x376.jpg" class="mt-image-none" style="" height="376" width="400" /></a></span><br /><br /><br /><span style="font-size: 1.1em; font-weight: bold;">2 - Adding a Directory and Uploading Files</span><br /><br />Once logged in, users are allowed to create folders and upload files.  Again, note that users can label folders as public, or private.  Public folders, and their public contents are visible to the world.  On the other hand, private folders hide their contents.&nbsp; Onyx understands hierarchical permissions; if the parent of a file or folder in the file structure is labeled private, the child automatically inherits the parents' visibility unless explicitly overridden by the user.<br /><br /><span class="mt-enclosure mt-enclosure-image" style="display: inline;"><a href="http://mark.koli.ch/2009/10/16/onyx-new-folder.jpg"><img alt="onyx-new-folder.jpg" src="http://mark.koli.ch/assets_c/2009/10/onyx-new-folder-thumb-400x188.jpg" class="mt-image-none" style="" height="188" width="400" /></a></span><br /><br /><span class="mt-enclosure mt-enclosure-image" style="display: inline;"><a href="http://mark.koli.ch/2009/10/16/onyx-upload.jpg"><img alt="onyx-upload.jpg" src="http://mark.koli.ch/assets_c/2009/10/onyx-upload-thumb-400x323.jpg" class="mt-image-none" style="" height="323" width="400" /></a></span><br /><br /><br /><span style="font-size: 1.1em; font-weight: bold;">3 - Sharing Content</span><br /><br />Files uploaded to the "Onyx cloud" can be easily shared. From the file list browser, users can simply mouse over any file, and click the "Share on Twitter" or "Get Permalink" icons.&nbsp; Of course, users can also delete, or download their files by clicking the respective delete or download icons in the file list.&nbsp; If the user deletes a folder, all files and folders under that folder are also deleted automatically.&nbsp; Registered users can only delete files they own: files they've uploaded, or folders they've created.<br /><br /><span class="mt-enclosure mt-enclosure-image" style="display: inline;"><a href="http://mark.koli.ch/2009/10/16/onyx-share-shot.jpg"><img alt="onyx-share-shot.jpg" src="http://mark.koli.ch/assets_c/2009/10/onyx-share-shot-thumb-400x223.jpg" class="mt-image-none" style="" height="223" width="400" /></a></span><br /><br /><br /><span style="font-size: 1.1em; font-weight: bold;">4 - Permalinks and Twitter Integration</span><br /><br />Users can instantly snag permalinks for any file or folder in Onyx.&nbsp; Onyx permalinks can be shared via email, instant messenger, Facebook, Twitter, Digg, or any other instant communication or link aggregation service.&nbsp; As shown below, I loaded a permalink for a picture of my girlfriend and I.&nbsp; I then clicked the "Tweet It!" button which redirected me to Twitter.&nbsp; Notice my Twitter "What are you doing?" status box is automatically populated with the file name, file description, and permalink from Onyx.&nbsp; One click later, my picture stored in Onyx is instantly shared with my followers on Twitter.<br /><br /><span class="mt-enclosure mt-enclosure-image" style="display: inline;"><a href="http://mark.koli.ch/2009/10/16/onyx-permalink-share.jpg"><img alt="onyx-permalink-share.jpg" src="http://mark.koli.ch/assets_c/2009/10/onyx-permalink-share-thumb-400x228.jpg" class="mt-image-none" style="" height="228" width="400" /></a></span><br /><br /><br /><span style="font-size: 1.1em; font-weight: bold;">5 - Search</span><br /><br />I haven't finished the search functionality yet, so unfortunately, I don't have any slick search screen shots to show you at the moment. However, the look and feel of the search will be similar to that of the upload file or create folder pop-ups. I plan to make the search, "search as you type" with a nice auto complete style drop-down.<br /><br />Feedback/comments are always welcome.&nbsp; Enjoy.<br />
    ";s:7:"attribs";a:2:{s:0:"";a:1:{s:4:"type";s:4:"html";}s:36:"http://www.w3.org/XML/1998/namespace";a:2:{s:4:"lang";s:5:"en-US";s:4:"base";s:20:"http://mark.koli.ch/";}}s:8:"xml_base";s:20:"http://mark.koli.ch/";s:17:"xml_base_explicit";b:1;s:8:"xml_lang";s:5:"en-US";}}}}}i:10;a:6:{s:4:"data";s:78:"
    
    
    

    
    

    
    
    
    
    
    
    
    
    
    
";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:1:{s:27:"http://www.w3.org/2005/Atom";a:9:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:34:"Successfully Moved Blog to koli.ch";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:3:"rel";s:9:"alternate";s:4:"type";s:9:"text/html";s:4:"href";s:73:"http://mark.koli.ch/2009/10/successfully-moved-my-blog-to-kolich.html?rss";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:2:"id";a:1:{i:0;a:5:{s:4:"data";s:29:"tag:mark.koli.ch,2009://1.200";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:9:"published";a:1:{i:0;a:5:{s:4:"data";s:20:"2009-10-03T15:05:00Z";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"updated";a:1:{i:0;a:5:{s:4:"data";s:20:"2009-10-03T15:08:17Z";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"summary";a:1:{i:0;a:5:{s:4:"data";s:251:"After quite a bit of planning, I finally got around to moving my blog to http://mark.koli.ch.&nbsp; Previously, my blog was hosted on kolich.com, but I'm planning on using my dot-com for another personal venture.&nbsp; My mobile blog has also moved...";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:6:"author";a:1:{i:0;a:6:{s:4:"data";s:23:"
        
        
    ";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:1:{s:27:"http://www.w3.org/2005/Atom";a:2:{s:4:"name";a:1:{i:0;a:5:{s:4:"data";s:11:"Mark Kolich";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:3:"uri";a:1:{i:0;a:5:{s:4:"data";s:19:"http://mark.koli.ch";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}}s:8:"category";a:5:{i:0;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:4:"blog";s:5:"label";s:4:"blog";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:1;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:7:"domains";s:5:"label";s:7:"domains";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:2;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:6:"kolich";s:5:"label";s:6:"kolich";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:3;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:2:"mt";s:5:"label";s:2:"mt";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:4;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:6:"netsol";s:5:"label";s:6:"netsol";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"content";a:1:{i:0;a:5:{s:4:"data";s:1371:"
        <span class="mt-enclosure mt-enclosure-image" style="display: inline;"><img alt="koli.ch-blog-move-success.png" src="http://mark.koli.ch/2009/10/02/koli.ch-blog-move-success.png" class="mt-image-left" style="margin: 0pt 20px 20px 0pt; float: left;" height="30" width="183" /></span>After quite a bit of planning, I finally got around to moving my blog to <a href="http://mark.koli.ch/">http://mark.koli.ch</a>.&nbsp; Previously, my blog was hosted on <b>kolich.com</b>, but I'm planning on using my dot-com for another personal venture.&nbsp; My mobile blog has also moved to <a href="http://mobi.koli.ch/">http://mobi.koli.ch</a>.&nbsp; As planned, everything "personal" is now consolidated under <b>koli.ch</b>.&nbsp; And so, if you notice a problem (broken links, errors, etc.) <a href="http://mark.koli.ch/contact-mark.html">please let me know</a>.<br /><br />Once again special thanks to my registrar, <a href="http://marketing.networksolutions.com/webaddress/new09/index.php">Network Solutions</a>, for adding the <b>.ch Swiss ccTLD</b> to their domain lineup.&nbsp; No, I'm not Swiss, but I do enjoy Swiss cheese, and I've been waiting for NetSol to support <b>.ch</b> for a while so I could snag my own personal <a href="http://en.wikipedia.org/wiki/Domain_hack">domain hack</a>.<br /><br />IMHO, <b>koli.ch</b> is quite <b>del.icio.us</b>.
        
    ";s:7:"attribs";a:2:{s:0:"";a:1:{s:4:"type";s:4:"html";}s:36:"http://www.w3.org/XML/1998/namespace";a:2:{s:4:"lang";s:5:"en-US";s:4:"base";s:20:"http://mark.koli.ch/";}}s:8:"xml_base";s:20:"http://mark.koli.ch/";s:17:"xml_base_explicit";b:1;s:8:"xml_lang";s:5:"en-US";}}}}}i:11;a:6:{s:4:"data";s:68:"
    
    
    

    
    

    
    
    
    
    
    
    
    
";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:1:{s:27:"http://www.w3.org/2005/Atom";a:9:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:61:"Even Better, a Big 5000 x 5000px Animated GIF for Hot-Linkers";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:3:"rel";s:9:"alternate";s:4:"type";s:9:"text/html";s:4:"href";s:97:"http://mark.koli.ch/2009/10/even-better-a-big-5000-x-5000px-animated-gif-for-hot-linkers.html?rss";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:2:"id";a:1:{i:0;a:5:{s:4:"data";s:32:"tag:mark.kolich.com,2009://1.199";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:9:"published";a:1:{i:0;a:5:{s:4:"data";s:20:"2009-10-02T14:45:00Z";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"updated";a:1:{i:0;a:5:{s:4:"data";s:20:"2009-10-02T20:34:24Z";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"summary";a:1:{i:0;a:5:{s:4:"data";s:259:"OK, I'm on a slightly vengeful tear this week dealing with the infamous hot-linking problem.&nbsp; Here, I explained how to more gracefully handle hot-linking blogs, forums, and other sites.&nbsp; Then yesterday, I explained the situation to a few folks at...";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:6:"author";a:1:{i:0;a:6:{s:4:"data";s:23:"
        
        
    ";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:1:{s:27:"http://www.w3.org/2005/Atom";a:2:{s:4:"name";a:1:{i:0;a:5:{s:4:"data";s:11:"Mark Kolich";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:3:"uri";a:1:{i:0;a:5:{s:4:"data";s:19:"http://mark.koli.ch";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}}s:8:"category";a:3:{i:0;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:6:"apache";s:5:"label";s:6:"apache";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:1;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:8:"htaccess";s:5:"label";s:8:"htaccess";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:2;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:24:"whatcouldpossiblygowrong";s:5:"label";s:24:"whatcouldpossiblygowrong";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"content";a:1:{i:0;a:5:{s:4:"data";s:1388:"
        OK, I'm on a slightly vengeful tear this week dealing with <a href="http://mark.koli.ch/2009/07/howto-prevent-hot-linking-of-your-images-using-apaches-mod-rewrite-engine.html">the infamous hot-linking problem</a>.&nbsp; <a href="http://mark.koli.ch/2009/10/hot-linkers-be-damned-a-nice-big-2000-x-2000px-square-for-your-site.html">Here</a>, I explained how to more gracefully handle hot-linking blogs, forums, and other sites.&nbsp; Then yesterday, I explained the situation to a few folks at work, and they suggested that I investigate returning a really massive and <a href="http://mark.koli.ch/nohotlink.gif">annoying animated GIF</a> instead of a <a href="http://mark.koli.ch/nohotlink.png">big static red square</a>!&nbsp; So, I looked into it, and it turns out that I'm able to return <a href="http://mark.koli.ch/nohotlink.gif">this 5000 x 5000 pixel animated GIF</a> at a fraction of the bandwidth it would cost me to return this <a href="http://mark.koli.ch/nohotlink.png">PNG'ed red square</a>.&nbsp; This new animated GIF alternates between red and yellow at roughly 200ms per frame.&nbsp; It's quite annoying, and even better, many browsers struggle to render this animated GIF given it's width and height (and it's only 36KB)!<br /><br />Enough hot-linking posts, I think I finally have this problem under control.<br /><br />Have a great Friday.<br />
        
    ";s:7:"attribs";a:2:{s:0:"";a:1:{s:4:"type";s:4:"html";}s:36:"http://www.w3.org/XML/1998/namespace";a:2:{s:4:"lang";s:5:"en-US";s:4:"base";s:20:"http://mark.koli.ch/";}}s:8:"xml_base";s:20:"http://mark.koli.ch/";s:17:"xml_base_explicit";b:1;s:8:"xml_lang";s:5:"en-US";}}}}}i:12;a:6:{s:4:"data";s:73:"
    
    
    

    
    

    
    
    
    
    
    
    
    
    
";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:1:{s:27:"http://www.w3.org/2005/Atom";a:9:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:66:"Hey Hot-Linkers Here's A Nice Big Red 2000 x 2000px Square For You";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:3:"rel";s:9:"alternate";s:4:"type";s:9:"text/html";s:4:"href";s:104:"http://mark.koli.ch/2009/10/hot-linkers-be-damned-a-nice-big-2000-x-2000px-square-for-your-site.html?rss";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:2:"id";a:1:{i:0;a:5:{s:4:"data";s:32:"tag:mark.kolich.com,2009://1.197";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:9:"published";a:1:{i:0;a:5:{s:4:"data";s:20:"2009-10-01T16:03:00Z";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"updated";a:1:{i:0;a:5:{s:4:"data";s:20:"2009-10-02T20:36:25Z";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"summary";a:1:{i:0;a:5:{s:4:"data";s:262:"Yesterday, I caught kentuckysportsradio.com hot-linking to images on my blog.&nbsp; I noticed an insane amount of traffic on my server requesting a single image, over and over again from the same referrer.&nbsp; Classic case of hot-linking, and boy, does that...";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:6:"author";a:1:{i:0;a:6:{s:4:"data";s:23:"
        
        
    ";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:1:{s:27:"http://www.w3.org/2005/Atom";a:2:{s:4:"name";a:1:{i:0;a:5:{s:4:"data";s:11:"Mark Kolich";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:3:"uri";a:1:{i:0;a:5:{s:4:"data";s:19:"http://mark.koli.ch";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}}s:8:"category";a:4:{i:0;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:6:"apache";s:5:"label";s:6:"apache";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:1;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:8:"htaccess";s:5:"label";s:8:"htaccess";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:2;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:4:"http";s:5:"label";s:4:"http";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:3;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:11:"mod_rewrite";s:5:"label";s:11:"mod_rewrite";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"content";a:1:{i:0;a:5:{s:4:"data";s:2510:"
        <span class="mt-enclosure mt-enclosure-image" style="display: inline;"><a href="http://mark.koli.ch/nohotlink.png"><img alt="nohotlink.png" src="http://mark.koli.ch/assets_c/2009/09/nohotlink-thumb-200x200.png" class="mt-image-left" style="margin: 0pt 20px 20px 0pt; float: left;" height="200" width="200" /></a></span>Yesterday, I caught kentuckysportsradio.com hot-linking to images on my blog.&nbsp; I noticed an insane amount of traffic on my server requesting a single image, over and over again from the same referrer.&nbsp; Classic case of hot-linking, and boy, does that irritate me.&nbsp; Really though, is it that tough to just save an image and host it on your own blog instead of linking to others?<br /><br />In a <a href="http://mark.koli.ch/2009/07/howto-prevent-hot-linking-of-your-images-using-apaches-mod-rewrite-engine.html">previous post I described how to address the hot-linking problem</a> by using Apache to check the referrer on each request.&nbsp; My previous solution involved simply returning a transparent 1x1 pixel image in place of the actual image requested.&nbsp; Well, through this KentuckySportsRadio situation, I discovered that when your server is pounded on and the hot-linker doesn't notice that it's bothering you, they don't (err, won't) stop hot-linking.&nbsp; Unfortunately, returning a transparent image just dosen't get their attention well enough.&nbsp; So, I stepped it up a notch.<br /><br />Instead of returning a transparent 1x1 pixel image, I decided to become really obvious and configured my server to return <a href="http://mark.koli.ch/nohotlink.png">a massive, bright red, 2000x2000 pixel square</a>.&nbsp; This huge red square is bound to capture someone's attention.&nbsp; And, wouldn't you know it, it worked!&nbsp; After tweaking my server to send back <a href="http://mark.koli.ch/nohotlink.png">this really annoying and disruptive 2000x2000 pixel square</a>, KentuckySportsRadio.com gave up and changed their ways.&nbsp; I win.<br /><br />This is a great win for bloggers and system administrators everywhere.&nbsp; You can somewhat curb hot-linking, and at the same time, <a href="http://mark.koli.ch/nohotlink.png">my big red 2000x2000px square is only about 40Kb</a> in size so it won't eat up your bandwidth.&nbsp; Feel free to use my big red stop hot-linking square on your own site.&nbsp; It's bound to make a great addition to a hot-linkers blog, forum, or web-site!<br /><br />I love the smell of HTTP in the morning.
        
    ";s:7:"attribs";a:2:{s:0:"";a:1:{s:4:"type";s:4:"html";}s:36:"http://www.w3.org/XML/1998/namespace";a:2:{s:4:"lang";s:5:"en-US";s:4:"base";s:20:"http://mark.koli.ch/";}}s:8:"xml_base";s:20:"http://mark.koli.ch/";s:17:"xml_base_explicit";b:1;s:8:"xml_lang";s:5:"en-US";}}}}}i:13;a:6:{s:4:"data";s:83:"
    
    
    

    
    

    
    
    
    
    
    
    
    
    
    
    
";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:1:{s:27:"http://www.w3.org/2005/Atom";a:9:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:90:"Remember Kids: An HTTP Content-Length is the Number of Bytes, Not the Number of Characters";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:3:"rel";s:9:"alternate";s:4:"type";s:9:"text/html";s:4:"href";s:125:"http://mark.koli.ch/2009/09/remember-kids-an-http-content-length-is-the-number-of-bytes-not-the-number-of-characters.html?rss";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:2:"id";a:1:{i:0;a:5:{s:4:"data";s:32:"tag:mark.kolich.com,2009://1.196";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:9:"published";a:1:{i:0;a:5:{s:4:"data";s:20:"2009-09-30T17:45:00Z";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"updated";a:1:{i:0;a:5:{s:4:"data";s:20:"2009-09-30T17:55:28Z";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"summary";a:1:{i:0;a:5:{s:4:"data";s:265:"Yesterday, I realized the importance of setting a properly computed Content-Length header in your HTTP response.&nbsp; You may know that the Content-Length header is the length of the response body in octets (8-bit bytes), and not the number of characters.&nbsp;...";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:6:"author";a:1:{i:0;a:6:{s:4:"data";s:23:"
        
        
    ";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:1:{s:27:"http://www.w3.org/2005/Atom";a:2:{s:4:"name";a:1:{i:0;a:5:{s:4:"data";s:11:"Mark Kolich";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:3:"uri";a:1:{i:0;a:5:{s:4:"data";s:19:"http://mark.koli.ch";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}}s:8:"category";a:6:{i:0;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:3:"bug";s:5:"label";s:3:"bug";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:1;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:4:"code";s:5:"label";s:4:"code";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:2;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:11:"commonsense";s:5:"label";s:11:"commonsense";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:3;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:4:"http";s:5:"label";s:4:"http";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:4;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:15:"pairprogramming";s:5:"label";s:15:"pairprogramming";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:5;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:4:"utf8";s:5:"label";s:4:"utf8";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"content";a:1:{i:0;a:5:{s:4:"data";s:4836:"
        <span class="mt-enclosure mt-enclosure-image" style="display: inline;"><img alt="utf-8-registered-trademark.png" src="http://mark.koli.ch/2009/09/30/utf-8-registered-trademark.png" class="mt-image-left" style="margin: 0pt 20px 20px 0pt; float: left;" height="50" width="274" /></span>Yesterday, I realized the importance of setting a properly computed Content-Length header in your HTTP response.&nbsp; You may know that the Content-Length header is the length of the response body in octets (8-bit bytes), and not the number of characters.&nbsp; In Java, I was computing the Content-Length using the <a href="http://java.sun.com/j2se/1.5.0/docs/api/java/lang/String.html#length%28%29">String.length()</a> method, which essentially returns a count of the number of characters in the String (<b>assuming each character was only one-byte</b>).&nbsp; Well, in many cases, using the String length as the Content-Length is entirely wrong, especially when dealing with UTF-8 encoded characters in your String.&nbsp; UTF-8 encodes each character (code point) in 1 to 4 octets (8-bit bytes).&nbsp; Meaning that if you have UTF-8 encoded characters in your String, then those characters may use more than a single byte to represent themselves.&nbsp; But, when you call String.length(), you're only going to get back the number of characters, not the number of bytes used to represent those characters (e.g., what the HTTP Content-Length header needs).<br /><br />So, here's the situation: I was working with some XML, where one of the entries happened to contain a special <a href="http://en.wikipedia.org/wiki/Registered_trademark_symbol">registered trademark (r) symbol</a>.&nbsp; My HTTP response was returning the data contained in this XML element, and on each response, the data was truncated by one-byte.&nbsp; Though a useful pair programming exercise, a colleague and I looked into the problem, and found that I was improperly computing the Content-Length.<br /><br />Here's why.&nbsp; According to the <a href="http://www.unicode.org/charts/PDF/U0080.pdf">proper Unicode documentation/chart on unicode.org</a>, we see that the registered trademark symbol uses two bytes to represent itself: 0x00 AE.&nbsp; But we know that in UTF-8 land, the <a href="http://en.wikipedia.org/wiki/UTF-8#Description">first byte should indicate that we're dealing with a two-byte character sequence</a>.&nbsp; Hence, the UTF-8 encoding for the registered trademark symbol is: 0xC2 AE.&nbsp; Using a trusty hex editor, we can verify that this indeed the correct encoding, by examining the byte sequence for the the UTF-8 encoded registered trademark symbol in the XML:<br /><br /><span class="mt-enclosure mt-enclosure-image" style="display: inline;"><img alt="registered-trademark-utf8-encoding.png" src="http://mark.koli.ch/2009/09/30/registered-trademark-utf8-encoding.png" class="mt-image-none" style="" height="51" width="450" /></span><br /><br /><br />Yep, sure enough, 0xC2 AE.&nbsp; So this character (r) uses two-bytes to represent itself in UTF-8.&nbsp; In other words, even though the (r) registered trademark symbol is a single code point in my response, it needs two bytes to properly represent itself.<br /><br />Now, say you include this XML element in an HTTP response of some kind, but computed the Content-Length using String's length() method.&nbsp; Like me, you might find that your HTTP response is truncated, given that your computed Content-Length is one byte less than it should be:<br /><br /><pre class="prettyprint">// WRONG: because String.length returns the number of<br />// characters, not the number of bytes like you would<br />// expect for UTF-8 encoded characters,<br />String response = [insert XML with UTF-8 characters here];<br />this.contentLength_ = response.length();<br /></pre><br />To fix this, convert the string to a sequence of UTF-8 encoded bytes, and compute the content length using the length of the resulting byte array:<br /><br /><pre class="prettyprint">// CORRECT: get a UTF-8 encoded byte array from the response<br />// String and set the content-length to the length of the<br />// resulting byte array.<br />String response = [insert XML with UTF-8 characters here];<br />byte[] responseBytes;<br />try {<br />  responseBytes = response.getBytes("UTF-8");<br />}<br />catch ( UnsupportedEncodingException e ) {<br />  System.err.print("My computer hates UTF-8");<br />}<br /><br />this.contentLength_ = responseBytes.length;<br /></pre><br />Not surprisingly, this solved my problem.&nbsp; So, remember kids, your Content-Length header is the number of bytes in your response, not the number of characters in a String.&nbsp; And, as you just learned, some code points (characters) in UTF-8 land can use up to four bytes to represent themselves.<br /><br />Back to work.
        
    ";s:7:"attribs";a:2:{s:0:"";a:1:{s:4:"type";s:4:"html";}s:36:"http://www.w3.org/XML/1998/namespace";a:2:{s:4:"lang";s:5:"en-US";s:4:"base";s:20:"http://mark.koli.ch/";}}s:8:"xml_base";s:20:"http://mark.koli.ch/";s:17:"xml_base_explicit";b:1;s:8:"xml_lang";s:5:"en-US";}}}}}i:14;a:6:{s:4:"data";s:73:"
    
    
    

    
    

    
    
    
    
    
    
    
    
    
";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:1:{s:27:"http://www.w3.org/2005/Atom";a:9:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:46:"Recently Acquired Koli.ch ... Blog Moving Soon";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:3:"rel";s:9:"alternate";s:4:"type";s:9:"text/html";s:4:"href";s:78:"http://mark.koli.ch/2009/09/recently-acquired-kolich-blog-moving-soon.html?rss";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:2:"id";a:1:{i:0;a:5:{s:4:"data";s:32:"tag:mark.kolich.com,2009://1.195";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:9:"published";a:1:{i:0;a:5:{s:4:"data";s:20:"2009-09-27T23:23:43Z";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"updated";a:1:{i:0;a:5:{s:4:"data";s:20:"2009-09-27T23:48:10Z";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"summary";a:1:{i:0;a:5:{s:4:"data";s:284:"Last Friday night my domain registrar, Network Solutions, added .ch (Switzerland), .pl (Poland), .cz (Czech Republic), .ru (Russian Federation), and .li (Liechtenstein/Long Island) to their domain name lineup.&nbsp; I've been waiting for NetSol to support dot-ch for quite a while,...";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:6:"author";a:1:{i:0;a:6:{s:4:"data";s:23:"
        
        
    ";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:1:{s:27:"http://www.w3.org/2005/Atom";a:2:{s:4:"name";a:1:{i:0;a:5:{s:4:"data";s:11:"Mark Kolich";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:3:"uri";a:1:{i:0;a:5:{s:4:"data";s:19:"http://mark.koli.ch";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}}s:8:"category";a:4:{i:0;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:4:"blog";s:5:"label";s:4:"blog";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:1;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:7:"domains";s:5:"label";s:7:"domains";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:2;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:2:"mt";s:5:"label";s:2:"mt";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:3;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:6:"netsol";s:5:"label";s:6:"netsol";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"content";a:1:{i:0;a:5:{s:4:"data";s:1913:"
        <span class="mt-enclosure mt-enclosure-image" style="display: inline;"><a href="http://mark.koli.ch/2009/09/27/koli.ch-first-ever-dot-ch-through-netsol.jpg"><img alt="koli.ch-first-ever-dot-ch-through-netsol.jpg" src="http://mark.koli.ch/assets_c/2009/09/koli.ch-first-ever-dot-ch-through-netsol-thumb-200x80.jpg" class="mt-image-left" style="margin: 0pt 20px 20px 0pt; float: left;" height="80" width="200" /></a></span>Last Friday night my domain registrar, <a href="http://marketing.networksolutions.com/webaddress/new09/index.php">Network Solutions</a>, added .ch (Switzerland), .pl (Poland), .cz (Czech Republic), .ru (Russian Federation), and .li (Liechtenstein/Long Island) to their domain name lineup.&nbsp; I've been waiting for NetSol to support dot-ch for quite a while, so I could snag <b>koli.ch</b>.&nbsp; And now, I'm the proud owner of <a href="http://koli.ch/">http://koli.ch</a>, a custom <a href="http://en.wikipedia.org/wiki/Domain_hack">domain hack</a> of my last name using the <a href="http://en.wikipedia.org/wiki/.ch">Swiss ccTLD</a>.&nbsp; Even cooler, NetSol's VP of Engineering confirmed on Twitter that koli.ch was the <a href="http://twitter.com/rickwilhelm/status/4388287070">first ever dot-ch domain registration through Network Solutions</a>.&nbsp; BTW, before I forget, special thanks to Network Solutions for adding .ch to their lineup!<br /><br />With that said, probably in the next few weeks, I plan on moving my blog to <a href="http://mark.koli.ch/">http://mark.koli.ch</a>.&nbsp; I have other plans for kolich.com at the moment, hence the desire to digitally relocate.&nbsp; It will definitely be a bit of work getting everything configured properly again on a new ccTLD, but at least I'll have fun configuring my web-server to gracefully redirect search bots and blog readers to my new online home.<br /><br />Until then, remember, life's a bea.ch.
        
    ";s:7:"attribs";a:2:{s:0:"";a:1:{s:4:"type";s:4:"html";}s:36:"http://www.w3.org/XML/1998/namespace";a:2:{s:4:"lang";s:5:"en-US";s:4:"base";s:20:"http://mark.koli.ch/";}}s:8:"xml_base";s:20:"http://mark.koli.ch/";s:17:"xml_base_explicit";b:1;s:8:"xml_lang";s:5:"en-US";}}}}}i:15;a:6:{s:4:"data";s:73:"
    
    
    

    
    

    
    
    
    
    
    
    
    
    
";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:1:{s:27:"http://www.w3.org/2005/Atom";a:9:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:63:"Apache: Setting the Content-Disposition Header with mod_rewrite";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:3:"rel";s:9:"alternate";s:4:"type";s:9:"text/html";s:4:"href";s:99:"http://mark.koli.ch/2009/09/apache-setting-the-content-disposition-header-with-mod-rewrite.html?rss";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:2:"id";a:1:{i:0;a:5:{s:4:"data";s:32:"tag:mark.kolich.com,2009://1.194";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:9:"published";a:1:{i:0;a:5:{s:4:"data";s:20:"2009-09-24T15:34:00Z";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"updated";a:1:{i:0;a:5:{s:4:"data";s:20:"2009-09-24T15:35:10Z";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"summary";a:1:{i:0;a:5:{s:4:"data";s:326:"Following yesterday's post on serving up static content with Restlet's built in web-server, I received a couple of questions on Twitter inquiring how I implemented my "download the latest Cappuccino" feature at http://mark.koli.ch/cappuccino/latest.&nbsp; If you visit http://mark.koli.ch/cappuccino/latest you'll notice it...";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:6:"author";a:1:{i:0;a:6:{s:4:"data";s:23:"
        
        
    ";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:1:{s:27:"http://www.w3.org/2005/Atom";a:2:{s:4:"name";a:1:{i:0;a:5:{s:4:"data";s:11:"Mark Kolich";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:3:"uri";a:1:{i:0;a:5:{s:4:"data";s:19:"http://mark.koli.ch";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}}s:8:"category";a:4:{i:0;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:6:"apache";s:5:"label";s:6:"apache";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:1;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:10:"cappuccino";s:5:"label";s:10:"cappuccino";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:2;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:4:"http";s:5:"label";s:4:"http";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:3;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:11:"mod_rewrite";s:5:"label";s:11:"mod_rewrite";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"content";a:1:{i:0;a:5:{s:4:"data";s:3416:"
        <span class="mt-enclosure mt-enclosure-image" style="display: inline;"><a href="http://mark.koli.ch/2009/09/23/firefox-cappuccino-kolich.jpg"><img alt="firefox-cappuccino-kolich.jpg" src="http://mark.koli.ch/assets_c/2009/09/firefox-cappuccino-kolich-thumb-200x150.jpg" class="mt-image-left" style="margin: 0pt 20px 20px 0pt; float: left;" height="150" width="200" /></a></span>Following <a href="http://mark.koli.ch/2009/09/a-really-simple-web-server-using-restlet.html">yesterday's post on serving up static content with Restlet's built in web-server</a>, I received a couple of questions on Twitter inquiring how I implemented my "download the latest Cappuccino" feature at <a href="http://mark.koli.ch/cappuccino/latest">http://mark.koli.ch/cappuccino/latest</a>.&nbsp; If you visit <a href="http://mark.koli.ch/cappuccino/latest">http://mark.koli.ch/cappuccino/latest</a> you'll notice it prompts you to save a file named "cappuccino.jar", which is the latest Cappuccino build available on kolich.com.&nbsp; Even if I change versions, and post a newer build on my server, you can always download the latest from <a href="http://mark.koli.ch/cappuccino/latest">http://mark.koli.ch/cappuccino/latest</a>.&nbsp; So, you might expect this URL to prompt you to save a file named "latest", given that this is how most web-browsers work; they take the string following the last / and use that as the file name.&nbsp; However, when someone visits /latest I want the browser to prompt them to save "cappuccino.jar" and not "latest".<br /><br />The title of this post is slightly misleading, since <b>the Content-Disposition header cannot be set directly using mod_rewrite</b>.&nbsp; As I understand it, there are a set of headers that mod_rewrite understands, and Content-Disposition is not one of them.<br /><br />So, to prompt the user to save cappuccino.jar instead of "latest", I used an interesting combination of mod_rewrite and mod_headers.&nbsp; Specifically, I used mod_rewrite to internally redirect any requests to .../cappuccino/latest to the latest cappuccino Jar file available on my server.&nbsp; Second, I used mod_headers to add a Content-Disposition header to any request ending with ../cappuccino/latest, which forces the browser/client to interpret the file as "cappuccino.jar" and not "latest".&nbsp; Here's the configuration from my Apache httpd.conf file:<br /><br /><pre class="prettyprint">## Internally redirect for Cappuccino<br />RewriteRule ^/cappuccino/latest /cappuccino/dist/cappuccino-v0.1.jar [L]<br />SetEnvIfNoCase Request_URI cappuccino\/latest$ cappuccino-latest<br />Header set Content-Disposition \<br />    "attachment; filename=cappuccino.jar" env=cappuccino-latest<br /></pre><br />With this configuration, Apache will set the Content-Disposition header on each request for <a href="http://mark.koli.ch/cappuccino/latest">http://mark.koli.ch/cappuccino/latest</a>.&nbsp; Using a tool like HttpFox, you can prove to yourself that this works as expected:<br /><br /><span class="mt-enclosure mt-enclosure-image" style="display: inline;"><a href="http://mark.koli.ch/2009/09/23/httpfox-snapshot-cappuccino-kolich.jpg"><img alt="httpfox-snapshot-cappuccino-kolich.jpg" src="http://mark.koli.ch/assets_c/2009/09/httpfox-snapshot-cappuccino-kolich-thumb-450x113.jpg" class="mt-image-none" style="" height="113" width="450" /></a></span><br /><br /><br />Enjoy.
        
    ";s:7:"attribs";a:2:{s:0:"";a:1:{s:4:"type";s:4:"html";}s:36:"http://www.w3.org/XML/1998/namespace";a:2:{s:4:"lang";s:5:"en-US";s:4:"base";s:20:"http://mark.koli.ch/";}}s:8:"xml_base";s:20:"http://mark.koli.ch/";s:17:"xml_base_explicit";b:1;s:8:"xml_lang";s:5:"en-US";}}}}}i:16;a:6:{s:4:"data";s:78:"
    
    
    

    
    

    
    
    
    
    
    
    
    
    
    
";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:1:{s:27:"http://www.w3.org/2005/Atom";a:9:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:57:"Cappuccino: A Really Simple Web-Server Powered By Restlet";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:3:"rel";s:9:"alternate";s:4:"type";s:9:"text/html";s:4:"href";s:77:"http://mark.koli.ch/2009/09/a-really-simple-web-server-using-restlet.html?rss";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:2:"id";a:1:{i:0;a:5:{s:4:"data";s:32:"tag:mark.kolich.com,2009://1.193";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:9:"published";a:1:{i:0;a:5:{s:4:"data";s:20:"2009-09-23T19:25:00Z";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"updated";a:1:{i:0;a:5:{s:4:"data";s:20:"2009-09-23T19:55:02Z";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"summary";a:1:{i:0;a:5:{s:4:"data";s:214:"Common problem: I need to share a bunch of files with a friend, or co-worker, but I can't send them via email because the files are greater than 10MB in total size.&nbsp; I could send them to a local web-server,...";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:6:"author";a:1:{i:0;a:6:{s:4:"data";s:23:"
        
        
    ";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:1:{s:27:"http://www.w3.org/2005/Atom";a:2:{s:4:"name";a:1:{i:0;a:5:{s:4:"data";s:11:"Mark Kolich";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:3:"uri";a:1:{i:0;a:5:{s:4:"data";s:19:"http://mark.koli.ch";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}}s:8:"category";a:5:{i:0;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:10:"cappuccino";s:5:"label";s:10:"cappuccino";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:1;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:4:"code";s:5:"label";s:4:"code";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:2;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:4:"http";s:5:"label";s:4:"http";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:3;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:4:"java";s:5:"label";s:4:"java";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:4;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:7:"restlet";s:5:"label";s:7:"restlet";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"content";a:1:{i:0;a:5:{s:4:"data";s:3305:"
        Common problem: I need to share a bunch of files with a friend, or co-worker, but I can't send them via email because the files are greater than 10MB in total size.&nbsp; I could send them to a local web-server, or post them on <b>kolich.com</b>, but that involves starting a new SSH session, some SCP's, what a mess.&nbsp; I wish I had a really lightweight simple web-server that I can simply copy into any directory, and start with one command.&nbsp; Once started, the web-server will simply serve files right from the directory I started it from (e.g., the web-server root becomes the current working directory).&nbsp; Then I can tell my co-workers to visit http://192.168.1.100:8080, for example, to download the files.<br /><br />A few weeks ago, I went through a Restlet tutorial for a project at work, and knew that <a href="http://www.restlet.org/documentation/1.1/tutorial#part06">Restlet supported its own internal HTTP web-server</a> for serving up static files.&nbsp; I wanted to learn a little more about this, so I created Cappuccino.&nbsp; Cappuccino is a lightweight server that uses Restlet's internal HTTP web-server to serve up static files from the directory it's started from.&nbsp; Technically speaking, Cappuccino is just a handsome wrapper of Restlet's internal HTTP server.<br /><br />Using <a href="http://one-jar.sourceforge.net/">Simon Tuff's one-jar</a>, I packaged all required libraries and resources into a single .jar file.&nbsp; As a result, you can start Cappuccino with a one-liner (assuming you have a good JRE installed in your path):<br /><br /><pre class="prettyprint">#/&gt; java -jar cappuccino.jar</pre><br />Once started, Cappuccino serves up static files in the current directory on port 8080 by default.&nbsp; Of course, you can change the default port:<br /><br /><pre class="prettyprint">#/&gt; java -jar cappuccino.jar 8099</pre><br />You can also add an alias to your *NIX shell (bash, etc.) for automatic downloading and start up of Cappuccino from the current working directory.&nbsp; For example, set a "<b>servehere</b>" alias to automatically download the latest Cappuccino and run it:<br /><br /><pre class="prettyprint">#/&gt; alias servehere='lynx -dump http://kolich.cc/cino &gt; cappuccino.jar; \<br />      java -jar cappuccino.jar'</pre><br />Once set, simply type <b>servehere</b> to download and start Cappuccino from the current directory.<br /><br />Note: I tried using "wget --quiet http://kolich.cc/cino" to automatically download cappuccino.jar in the alias example above, but it appears that <a href="http://www.mail-archive.com/wget@sunsite.dk/msg10638.html">wget doesn't always obey the Content-Disposition header</a> sent by my web-server.&nbsp; It seems that wget on my CentOS box understands the Content-Disposition header by default, but wget on my Fedora 7 box does not.&nbsp; Better to use Lynx, which gets it right more often than not.<br /><br /><b>Download the Source:</b><br /><a href="http://mark.koli.ch/cappuccino/src/cappuccino-v0.1.zip">http://mark.koli.ch/cappuccino/src/cappuccino-v0.1.zip</a><br /><b><br />Download the Runnable Jar:</b><br /><a href="http://mark.koli.ch/cappuccino/dist/cappuccino-v0.1.jar">http://mark.koli.ch/cappuccino/dist/cappuccino-v0.1.jar</a><br /><br /><br />Enjoy.
        
    ";s:7:"attribs";a:2:{s:0:"";a:1:{s:4:"type";s:4:"html";}s:36:"http://www.w3.org/XML/1998/namespace";a:2:{s:4:"lang";s:5:"en-US";s:4:"base";s:20:"http://mark.koli.ch/";}}s:8:"xml_base";s:20:"http://mark.koli.ch/";s:17:"xml_base_explicit";b:1;s:8:"xml_lang";s:5:"en-US";}}}}}i:17;a:6:{s:4:"data";s:68:"
    
    
    

    
    

    
    
    
    
    
    
    
    
";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:1:{s:27:"http://www.w3.org/2005/Atom";a:9:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:73:"My Most Helpful and Least Helpful Blog Posts: June through September 2009";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:3:"rel";s:9:"alternate";s:4:"type";s:9:"text/html";s:4:"href";s:81:"http://mark.koli.ch/2009/09/my-most-helpful-and-least-helpful-blog-posts.html?rss";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:2:"id";a:1:{i:0;a:5:{s:4:"data";s:32:"tag:mark.kolich.com,2009://1.192";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:9:"published";a:1:{i:0;a:5:{s:4:"data";s:20:"2009-09-16T21:15:00Z";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"updated";a:1:{i:0;a:5:{s:4:"data";s:20:"2009-09-16T21:16:01Z";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"summary";a:1:{i:0;a:5:{s:4:"data";s:217:"Back in early June, I wrote up a quick blog post describing how I setup my Did you Find this Helpful? widget.&nbsp; The goal of this widget was to determine which blog posts my readers found most helpful, and least...";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:6:"author";a:1:{i:0;a:6:{s:4:"data";s:23:"
        
        
    ";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:1:{s:27:"http://www.w3.org/2005/Atom";a:2:{s:4:"name";a:1:{i:0;a:5:{s:4:"data";s:11:"Mark Kolich";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:3:"uri";a:1:{i:0;a:5:{s:4:"data";s:19:"http://mark.koli.ch";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}}s:8:"category";a:3:{i:0;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:4:"blog";s:5:"label";s:4:"blog";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:1;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:5:"linux";s:5:"label";s:5:"linux";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:2;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:2:"mt";s:5:"label";s:2:"mt";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"content";a:1:{i:0;a:5:{s:4:"data";s:3885:"
        Back in early June, I <a href="http://mark.koli.ch/2009/06/added-a-did-you-find-this-helpful-feedback-form-to-my-movable-type-blog.html">wrote up a quick blog post describing how I setup my Did you Find this Helpful? widget</a>.&nbsp; The goal of this widget was to determine which blog posts my readers found most helpful, and least helpful.&nbsp; As described, I used a little JavaScript (jQuery driven of course) to <a href="http://mark.koli.ch/2009/03/howto-configure-apache-to-return-a-http-204-no-content-for-ajax.html">log the request with Apache via AJAX</a>.&nbsp; The yes or no responses from readers are cached in my Apache log files, which let me run reports on these logs to see which of my posts are most helpful, and least helpful:<br /><br /><pre class="prettyprint">192.168.1.1 - - [05/Jun/2009:09:03:07 -0700] \<br />   "GET /tracker/Helpful/yes/?http%3A%2F%2Fmark.koli.ch%2F2009%2... \<br />   HTTP/1.1" 204 - "http://mark.koli.ch/2009/05/..." \<br />   "Mozilla/5.0 (Windows; U; Windows NT 6.0; en-US; rv:1.9.0.10) \<br />      Gecko/2009042316 Firefox/3.0.10 (.NET CLR 3.5.30729)"</pre><br />Since June I've been collecting "Did you find this helpful?" responses, and finally got around to analyzing my logs to determine what is actually most helpful, and least helpful.&nbsp; Here's the top 5 in each category.&nbsp; Interestingly, two of the most helpful blog posts are also two of the least helpful.&nbsp; I guess you can't please everyone:<br /><br /><br /><span style="font-size: 1.1em; font-weight: bold;">Top 5 Most Helpful</span><br /><br /><ol><li><a href="http://mark.koli.ch/2009/02/resolving-orgxmlsaxsaxparseexception-content-is-not-allowed-in-prolog.html">JAVA: Resolving org.xml.sax.SAXParseException: Content is not allowed in prolog</a></li><li><a href="http://mark.koli.ch/2009/05/howto-whole-disk-backups-with-dd-gzip-and-p7zip.html">HOWTO: Whole Disk Backup and Recovery with dd, gzip, and p7zip (Linux on a CD too)</a></li><li><a href="http://mark.koli.ch/2009/05/symantec-antivirus-howto-disableunlock-forced-administrator-scans.html">Symantec AntiVirus: HOWTO Disable/Unlock Scheduled Administrator Scans</a></li><li><a href="http://mark.koli.ch/2009/03/using-the-twitter-api-cache-your-tweets-in-php.html">Using the Twitter API, Cache Your 'Tweets' in PHP (TwitterCacher)</a></li><li><a href="http://mark.koli.ch/2009/01/understanding-javas-perm-gen-maxpermsize-heap-space-etc.html">Understanding Java's "Perm Gen" (MaxPermSize, heap space, etc.)</a></li></ol><br />Complete list <a href="http://mark.koli.ch/most-helpful/most-helpful-sep-2009.html">September 2009 Most Helpful blog posts</a>.<br /><br /><br /><span style="font-size: 1.1em; font-weight: bold;">Top 5 Least Helpful</span><br /><br /><ol><li><a href="http://mark.koli.ch/2009/02/howto-make-your-own-addthis-social-bookmarking-sharing-widget-thing.html">HOWTO: Make Your Own AddThis Social Bookmarking Sharing Widget (Sharing URLs)</a></li><li><a href="http://mark.koli.ch/2009/01/understanding-javas-perm-gen-maxpermsize-heap-space-etc.html">Understanding Java's "Perm Gen" (MaxPermSize, heap space, etc.)</a></li><li><a href="http://mark.koli.ch/2009/04/java-to-capitalize-the-first-letter-of-each-word-in-a-sentence.html">Java to Capitalize the First Letter of Each Word in a Sentence</a></li><li><a href="http://mark.koli.ch/2009/05/imagemagick-and-php-your-best-friend-our-your-worst-nightmare.html">ImageMagick and PHP: Your Best Friend Or Your Worst Nightmare (Installing and a Few Examples)</a></li><li><a href="http://mark.koli.ch/2009/02/resolving-orgxmlsaxsaxparseexception-content-is-not-allowed-in-prolog.html">JAVA: Resolving org.xml.sax.SAXParseException: Content is not allowed in prolog</a></li></ol><br />Complete list <a href="http://mark.koli.ch/most-helpful/least-helpful-sep-2009.html">September 2009 Least Helpful blog posts</a>.
        
    ";s:7:"attribs";a:2:{s:0:"";a:1:{s:4:"type";s:4:"html";}s:36:"http://www.w3.org/XML/1998/namespace";a:2:{s:4:"lang";s:5:"en-US";s:4:"base";s:20:"http://mark.koli.ch/";}}s:8:"xml_base";s:20:"http://mark.koli.ch/";s:17:"xml_base_explicit";b:1;s:8:"xml_lang";s:5:"en-US";}}}}}i:18;a:6:{s:4:"data";s:68:"
    
    
    

    
    

    
    
    
    
    
    
    
    
";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:1:{s:27:"http://www.w3.org/2005/Atom";a:9:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:89:"REVIEW: Porter-Cable C2002-WK Oil-Free UMC Pancake Compressor with 13-Piece Accessory Kit";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:3:"rel";s:9:"alternate";s:4:"type";s:9:"text/html";s:4:"href";s:125:"http://mark.koli.ch/2009/09/review-porter-cable-c2002-wk-oil-free-umc-pancake-compressor-with-13-piece-accessory-kit.html?rss";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:2:"id";a:1:{i:0;a:5:{s:4:"data";s:32:"tag:mark.kolich.com,2009://1.191";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:9:"published";a:1:{i:0;a:5:{s:4:"data";s:20:"2009-09-12T16:50:00Z";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"updated";a:1:{i:0;a:5:{s:4:"data";s:20:"2009-09-12T16:50:52Z";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"summary";a:1:{i:0;a:5:{s:4:"data";s:258:"OK, here's a post that has nothing to do with technology.&nbsp; Usually when I acquire a new appliance, or piece of weekend warrior type equipment, I enjoy writing up a quick honest-to-God review about my first impressions.&nbsp; The Porter-Cable C2002-WK...";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:6:"author";a:1:{i:0;a:6:{s:4:"data";s:23:"
        
        
    ";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:1:{s:27:"http://www.w3.org/2005/Atom";a:2:{s:4:"name";a:1:{i:0;a:5:{s:4:"data";s:11:"Mark Kolich";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:3:"uri";a:1:{i:0;a:5:{s:4:"data";s:19:"http://mark.koli.ch";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}}s:8:"category";a:3:{i:0;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:13:"aircompressor";s:5:"label";s:13:"aircompressor";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:1;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:6:"review";s:5:"label";s:6:"review";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:2;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:24:"whatcouldpossiblygowrong";s:5:"label";s:24:"whatcouldpossiblygowrong";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"content";a:1:{i:0;a:5:{s:4:"data";s:6393:"
        <span class="mt-enclosure mt-enclosure-image" style="display: inline;"><a href="http://mark.koli.ch/2009/09/11/51TRv0bGiLL._SL500_AA280_.jpg"><img alt="51TRv0bGiLL._SL500_AA280_.jpg" src="http://mark.koli.ch/assets_c/2009/09/51TRv0bGiLL._SL500_AA280_-thumb-200x200.jpg" class="mt-image-left" style="margin: 0pt 20px 20px 0pt; float: left;" height="200" width="200" /></a></span>OK, here's a post that has nothing to do with technology.&nbsp; Usually when I acquire a new appliance, or piece of weekend warrior type equipment, I enjoy writing up a quick honest-to-God review about my first impressions.&nbsp; The <a href="http://www.amazon.com/Porter-Cable-C2002-WK-Oil-Free-Compressor-Accessory/dp/B000N5UHK0">Porter-Cable C2002-WK Oil-Free UMC Pancake Compressor with 13-Piece Accessory Kit</a> I recently purchased is no exception.&nbsp; And for the record, I'm no contractor or construction worker; I'm just a guy who needed a somewhat simple air compressor for basic round the house jobs.&nbsp; Generally speaking, I only plan on using this compressor to keep tires inflated, and to spray out dusty computer equipment.&nbsp; I'm sure this compressor has other, more noble uses.&nbsp; I have yet to find one, but I'm sure I'll come across something soon.
        <br /><span style="font-size: 1.1em; font-weight: bold;">1 - First Impressions</span><br /><br />The <a href="http://www.amazon.com/Porter-Cable-C2002-WK-Oil-Free-Compressor-Accessory/dp/B000N5UHK0">Porter-Cable C2002-WK Oil-Free UMC Pancake Compressor with 13-Piece Accessory Kit</a> appears to be very well made.&nbsp; Out of the box, the unit was a little dusty, and slightly scratched (I thought the compressor I purchased was a return).&nbsp; However, turns out it was dusty because of the loose cardboard packaging that housed the unit during shipping.&nbsp; The small scratches on the side of the tank were from the prongs of the plug rubbing against the tank.&nbsp; From my limited experience with air compressors, I know that any dents or scratches on the tank, if large enough, could compromise the tanks' stability (if it's weakened, it could explode under pressure).&nbsp; That was clearly not the case here; all of the scratches were purely superficial.<br /><br />After unpacking, I followed the important break-in procedure to get the compressor ready for use.&nbsp; This involves opening the drain valve, and turning on the compressor for about 15-minutes to clear out any moisture collected in the tank during shipping.&nbsp; I was initially surprised how loud the unit was.&nbsp; The break-in procedure went fine, and I started to use the compressor to spray off some dusty computer equipment and my garage workbench.&nbsp; Assembling the sprayer and attaching the hose was a snap.<br /><br />The unit is much louder and heavier than I expected, but wasn't too bad.&nbsp; I don't have experience with other compressors, so I can't compare it to another make or model.&nbsp; Contrary to what I read online about this compressor, the vinyl hose that comes included with the unit is actually quite nice.&nbsp; A few reviewers said the hose was stiff and "had a memory", meaning if you coil it up, it's going to want to stay coiled.&nbsp; In fact, the vinyl hose I received with my unit easily stretched itself out to full length with no issues.<br /><br /><br /><span style="font-size: 1.1em; font-weight: bold;">2 - Pros</span><br /><br />Easy setup; I un-boxed the unit and had it up and running in about 5 minutes.&nbsp; The 13-piece accessory kit that comes with the unit has just about everything a weekend warrior would need to get started.&nbsp; The tank pressure and regulator gauges are well built, and easy to read.&nbsp; The unit is reasonably sized, and can fit in just about any garage corner with ease. &nbsp; <br /><br /><br /><span style="font-size: 1.1em; font-weight: bold;">3 - Cons</span><br /><br />The compressor is louder and heavier than I expected.&nbsp; In a somewhat confined space like a standard garage, the noise from the compressor motor is almost uncomfortable.&nbsp; The compressor does appear to run on the warm side.&nbsp; The motor itself
seemed to be OK, but the hose connecting the motor to the tank got
extremely hot after about 30 minutes of run-time.&nbsp; When on, the compressor motor vibrates quite a bit; if the rubber feet on the unit are not on a surface with good traction, the compressor seems to "walk around" on its own.&nbsp; It had a tendency to move around a little bit on the smooth cement surface of my garage floor.<br /><br /><br /><span style="font-size: 1.1em; font-weight: bold;">4 - Overall</span><br /><br /><b>4 out of 5 stars.</b><br /><br />If you'd like to check out the <a href="http://mark.koli.ch/2009/09/11/A15414-C2002.pdf">Porter-Cable C2002-WK manual, you can download it here</a>.<br /><br /><br /><span style="font-size: 1.1em; font-weight: bold;">5 - Pictures</span><br /><br /><span class="mt-enclosure mt-enclosure-image" style="display: inline;"><a href="http://mark.koli.ch/2009/09/12/porter-cable-c2002-wk-pic1.jpg"><img alt="porter-cable-c2002-wk-pic1.jpg" src="http://mark.koli.ch/assets_c/2009/09/porter-cable-c2002-wk-pic1-thumb-200x149.jpg" class="mt-image-none" style="" height="149" width="200" /></a></span><div><br /><span class="mt-enclosure mt-enclosure-image" style="display: inline;"><a href="http://mark.koli.ch/2009/09/12/porter-cable-c2002-wk-pic2.jpg"><img alt="porter-cable-c2002-wk-pic2.jpg" src="http://mark.koli.ch/assets_c/2009/09/porter-cable-c2002-wk-pic2-thumb-200x149.jpg" class="mt-image-none" style="" height="149" width="200" /></a></span><br /></div><div><br /><span class="mt-enclosure mt-enclosure-image" style="display: inline;"><a href="http://mark.koli.ch/2009/09/12/porter-cable-c2002-wk-pic3.jpg"><img alt="porter-cable-c2002-wk-pic3.jpg" src="http://mark.koli.ch/assets_c/2009/09/porter-cable-c2002-wk-pic3-thumb-200x149.jpg" class="mt-image-none" style="" height="149" width="200" /></a></span><br /><br /><span class="mt-enclosure mt-enclosure-image" style="display: inline;"><a href="http://mark.koli.ch/2009/09/12/porter-cable-c2002-wk-pic4.jpg"><img alt="porter-cable-c2002-wk-pic4.jpg" src="http://mark.koli.ch/assets_c/2009/09/porter-cable-c2002-wk-pic4-thumb-200x149.jpg" class="mt-image-none" style="" height="149" width="200" /></a></span><br /></div><div><br /></div>
    ";s:7:"attribs";a:2:{s:0:"";a:1:{s:4:"type";s:4:"html";}s:36:"http://www.w3.org/XML/1998/namespace";a:2:{s:4:"lang";s:5:"en-US";s:4:"base";s:20:"http://mark.koli.ch/";}}s:8:"xml_base";s:20:"http://mark.koli.ch/";s:17:"xml_base_explicit";b:1;s:8:"xml_lang";s:5:"en-US";}}}}}i:19;a:6:{s:4:"data";s:68:"
    
    
    

    
    

    
    
    
    
    
    
    
    
";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:1:{s:27:"http://www.w3.org/2005/Atom";a:9:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:51:"HOWTO: Quickly Erase/Format/Wipe Your Disks with dd";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:3:"rel";s:9:"alternate";s:4:"type";s:9:"text/html";s:4:"href";s:80:"http://mark.koli.ch/2009/09/howto-quickly-formatwipe-your-disks-with-dd.html?rss";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:2:"id";a:1:{i:0;a:5:{s:4:"data";s:32:"tag:mark.kolich.com,2009://1.190";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:9:"published";a:1:{i:0;a:5:{s:4:"data";s:20:"2009-09-10T21:55:00Z";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"updated";a:1:{i:0;a:5:{s:4:"data";s:20:"2009-09-10T21:57:44Z";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"summary";a:1:{i:0;a:5:{s:4:"data";s:252:"Quick tip: If you're ever in a situation that requires a simple and dirty wipe/format/erase of a device (USB key, hard disk, whatever), you might find the following HOWTO somewhat useful.&nbsp; This post assumes you are familiar with Linux.Note that...";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:6:"author";a:1:{i:0;a:6:{s:4:"data";s:23:"
        
        
    ";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:1:{s:27:"http://www.w3.org/2005/Atom";a:2:{s:4:"name";a:1:{i:0;a:5:{s:4:"data";s:11:"Mark Kolich";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:3:"uri";a:1:{i:0;a:5:{s:4:"data";s:19:"http://mark.koli.ch";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}}s:8:"category";a:3:{i:0;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:2:"dd";s:5:"label";s:2:"dd";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:1;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:5:"howto";s:5:"label";s:5:"howto";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:2;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"term";s:5:"linux";s:5:"label";s:5:"linux";s:6:"scheme";s:36:"http://www.sixapart.com/ns/types#tag";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"content";a:1:{i:0;a:5:{s:4:"data";s:1852:"
        Quick tip: If you're ever in a situation that requires a simple and dirty wipe/format/erase of a device (USB key, hard disk, whatever), you might find the following HOWTO somewhat useful.&nbsp; This post assumes you are familiar with Linux.<br /><br /><i><b>Note that these instructions tell you how to erase a disk for simple "keep prying eyes away from your data" purposes.&nbsp; If the device you're erasing contains sensitive data of any kind, and you care about data security, then you should consider "shredding" your device using a tool like <a href="http://www.dban.org/">DBan</a> (Darik's Boot And Nuke).</b></i><br /><br /><br /><span style="font-size: 1.1em; font-weight: bold;">#1 - Attach and Locate the Device You want to "Erase"</span><br /><br />For a hard disk, you'll probably use /dev/hda.&nbsp; For a USB key, something like /dev/sdd is most common.&nbsp; You'll need to locate the correct device special file for your device; these vary from system to system.<br /><br /><br /><span style="font-size: 1.1em; font-weight: bold;">#2 - Erase with All Zeros, or a Random Bit Pattern</span><br /><br />Once you've located the DSF for your device, you can use <b>dd</b> to erase it by writing out a series of continuous zeros, or a random bit pattern.&nbsp; For the sake of this example, I'll assume the device you want to erase is /dev/hda.&nbsp; Erase the device with all zeros:<br /><br /><pre class="prettyprint">#/&gt; dd if=/dev/zero of=/dev/hda bs=1024k</pre><br />Or, erase the device with a random bit pattern using /dev/urandom:<br /><br /><pre class="prettyprint">#/&gt; dd if=/dev/urandom of=/dev/hda bs=1024k</pre><br />BTW, for the curious, you can also <a href="http://mark.koli.ch/2008/10/howto-generating-good-random-passwords-with-devurandom.html">generate decent passwords using /dev/random</a>.
        
    ";s:7:"attribs";a:2:{s:0:"";a:1:{s:4:"type";s:4:"html";}s:36:"http://www.w3.org/XML/1998/namespace";a:2:{s:4:"lang";s:5:"en-US";s:4:"base";s:20:"http://mark.koli.ch/";}}s:8:"xml_base";s:20:"http://mark.koli.ch/";s:17:"xml_base_explicit";b:1;s:8:"xml_lang";s:5:"en-US";}}}}}}}}}}}}s:4:"type";i:512;s:7:"headers";a:10:{s:4:"date";s:29:"Sun, 08 Nov 2009 21:58:32 GMT";s:6:"server";s:6:"Apache";s:13:"last-modified";s:29:"Sat, 07 Nov 2009 20:26:11 GMT";s:4:"etag";s:21:"4c0033-1aef2-c56b7ec0";s:13:"accept-ranges";s:5:"bytes";s:4:"vary";s:26:"Accept-Encoding,User-Agent";s:16:"content-encoding";s:4:"gzip";s:14:"content-length";s:5:"29775";s:10:"connection";s:5:"close";s:12:"content-type";s:8:"text/xml";}s:5:"build";s:14:"20090627192103";}